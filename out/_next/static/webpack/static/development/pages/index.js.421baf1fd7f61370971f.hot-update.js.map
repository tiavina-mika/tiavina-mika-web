{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.421baf1fd7f61370971f.hot-update.js","sources":["webpack:///./components/home/competences/svg/CompetencesBlock.tsx","webpack:///./components/home/competences/svg/RecShadow.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport clsx from 'clsx';\n\nimport { competenseSvgTopY, competenseSvgBottomY } from '../../../../utils/constants';\nimport { isTop } from '../../../../utils/utils';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    dots: {\n        fill: 'none',\n        isolation: 'isolate',\n        stroke: '#63bf91',\n        strokeWidth: 3.39,\n        strokeDasharray: 5.08,\n        opacity: 0.4,\n    },\n    dotsActive: {\n        stroke: theme.colors.active,\n        opacity: 1,\n    },\n    dotsInactive: {\n        stroke: '#63bf91',\n        opacity: 0.4,\n    },\n    rect: { fill: '#bdefd1' },\n    text: {\n        composes: 'font-ProximaNova-regular',\n        fontSize: 18,\n        fontWeight: 'bold',\n    },\n}));\ntype Props = {\n    rect?: any;\n    id: string;\n    dotsPath: string;\n    label: string;\n    icon: (value?: boolean) => ReactNode;\n    x: number;\n    isCurrent: boolean;\n};\nconst CompetencesBlock: FC<Props> = ({ id, x, dotsPath, icon, label, isCurrent }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    return (\n        <g id={id + '-2'} data-name={id}>\n            <path\n                id={id + '-p'}\n                className={clsx(classes.dots, isCurrent ? classes.dotsActive : classes.dotsInactive)}\n                d={dotsPath}\n                transform=\"translate(2.95 -0.55)\"\n            />\n            <g id={id + '-content'}>\n                {icon(isCurrent)}\n                <g id=\"text-container\" transform=\"translate(2.95 -0.55)\">\n                    <text\n                        fill={isCurrent ? '#fff' : (theme as any).colors.secondary}\n                        className={classes.text}\n                        x={x}\n                        y={isTop(id) ? competenseSvgTopY : competenseSvgBottomY}\n                        id={'text-path' + id}>\n                        {label}\n                    </text>\n                </g>\n            </g>\n        </g>\n    );\n};\n\nexport default CompetencesBlock;\n","import React, { FC } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { isTop } from '../../../../utils/utils';\n\nconst useStyles = createUseStyles({\n    blendMode: { mixBlendMode: 'multiply' },\n    shadow: { composes: '$blendMode', opacity: 0.1 },\n});\n\ntype Props = { id: string; transform?: string; xlinkHref: string; x: string; isCurrent: boolean };\nconst RecShadow: FC<Props> = ({ id, transform, xlinkHref, x, isCurrent }) => {\n    const theme = useTheme();\n\n    const classes = useStyles();\n    return (\n        <g id={id}>\n            <image className={classes.shadow} width=\"199\" height=\"168\" transform={transform} xlinkHref={xlinkHref} />\n            <rect\n                fill={isCurrent ? (theme as any).colors.active : '#fff'}\n                x={x}\n                y={isTop(id) ? '14' : '537.78'}\n                width=\"167.98\"\n                height=\"137.12\"\n                rx=\"8.8\"\n            />\n        </g>\n    );\n};\n\nexport default RecShadow;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAlBA;AAAA;AACA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}