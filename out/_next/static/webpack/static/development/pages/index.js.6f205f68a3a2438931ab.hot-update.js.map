{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6f205f68a3a2438931ab.hot-update.js","sources":["webpack:///./components/menu/Menu.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport { media } from '../../utils/constants';\nimport clsx from 'clsx';\nimport { screenState } from '../../reducers/appReducer';\nimport { useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { openMenuAnimation } from '../../animations/app';\nimport Link, { LinkProps } from './Link';\n\nconst useStyles = createUseStyles({\n    menuRoot: {\n        composes: 'flexRow center font-Montserrat-light',\n        width: '100%',\n        position: 'fixed',\n        zIndex: 2000,\n        top: 50,\n        left: 0,\n        fontSize: 18,\n        [media.lgDown]: {\n            flexDirection: 'column',\n            alignSelf: 'stretch',\n            alignItems: 'flex-start',\n            top: 0,\n            backgroundColor: '#000',\n        },\n        [media.lgDown]: {\n            height: 80,\n        },\n    },\n    fixedMenuRoot: {\n        top: 0,\n    },\n    nonFixedMenuRoot: {\n        top: 50,\n    },\n    logo: {\n        marginLeft: 20,\n        flex: 2,\n        [media.mdDown]: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignSelf: 'stretch',\n            marginLeft: 0,\n            alignItems: 'center',\n            padding: 10,\n        },\n        [media.xlDown]: {\n            flex: 1,\n        },\n    },\n    fixedLogo: {\n        [media.mdUp]: {\n            backgroundColor: '#000',\n            border: '5px solid #000',\n        },\n    },\n    menus: {\n        composes: 'flexRow',\n        flex: 1,\n        [media.mdDown]: {\n            flexDirection: 'column',\n            paddingTop: 15,\n            paddingBottom: 15,\n        },\n    },\n    fixedMenu: {\n        [media.mdUp]: {\n            display: 'flex',\n            alignItems: 'center',\n            backgroundColor: '#000',\n            height: '100%',\n            paddingLeft: 20,\n            borderRadius: 2,\n        },\n    },\n    menuIcon: {\n        cursor: 'pointer',\n        [media.mdUp]: {\n            display: 'none',\n        },\n    },\n    logoIcon: {\n        width: 30,\n    },\n});\n\nconst links = [\n    {\n        id: 'about',\n        icon: 'passion',\n        text: 'A propos de moi',\n    },\n    {\n        id: 'competences',\n        icon: 'passion',\n        text: 'CompÃ©tences',\n    },\n    {\n        id: 'projects',\n        icon: 'passion',\n        text: 'Projets',\n    },\n    {\n        id: 'contact',\n        icon: 'passion',\n        text: 'Contact',\n    },\n];\n\nconst Menu = () => {\n    const classes = useStyles();\n    const [openMenu, setOpenMenu] = useState<boolean>(false);\n    const [fixMenu, setFixMenu] = useState<boolean>(false);\n    const isMobile = useSelector(screenState);\n\n    const onScroll = () => {\n        const header = document.getElementById('presentation');\n        const sticky = header.offsetHeight / 2;\n        if (window.pageYOffset > sticky) {\n            setFixMenu(true);\n        } else {\n            setFixMenu(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [fixMenu]);\n\n    const handleOpen = () => setOpenMenu(!openMenu);\n    // const handleClose = () => setOpenMenu(false);\n\n    const Div = !isMobile ? 'div' : motion.div;\n    const animate = !isMobile ? {} : openMenuAnimation;\n\n    const menus = (\n        <Div className={clsx(classes.menus, fixMenu ? classes.fixedMenu : null)} {...animate}>\n            {(links as LinkProps[]).map(\n                (link: LinkProps, index: number): ReactNode => (\n                    <Link {...link} key={index} />\n                )\n            )}\n        </Div>\n    );\n\n    return (\n        <div className={clsx(classes.menuRoot, fixMenu ? classes.fixedMenuRoot : classes.nonFixedMenuRoot)} id=\"menu\">\n            <div className={classes.logo}>\n                <img\n                    alt=\"\"\n                    src=\"/images/logo.svg\"\n                    className={clsx(classes.logoIcon, fixMenu ? classes.fixedLogo : null)}\n                />\n                <img alt=\"\" src=\"/images/icons/menu.svg\" className={classes.menuIcon} onClick={handleOpen} />\n            </div>\n            {isMobile && openMenu && menus}\n            {!isMobile && menus}\n        </div>\n    );\n};\n\nexport default Menu;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AADA;AAIA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAxEA;AA6EA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}