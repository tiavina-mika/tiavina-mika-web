{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c3ec67442103d0298c05.hot-update.js","sources":["webpack:///./components/home/knowledges/Knowledge.tsx","webpack:///./components/home/knowledges/Knowledges.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { media } from '../../../utils/constants';\n\nimport Text from '../../shared/Text';\nimport Title from '../../shared/Title';\nimport { KnowledgeI, TechnoI } from './Knowledges';\nimport ProgressiveBar from './ProgressiveBar';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgeRoot: {\n        composes: 'flexColumn center stretchSelf',\n        fontFamily: 'font-ProximaNova-regular',\n        marginTop: theme.spacing(20),\n    },\n    knowledgeContent: {\n        composes: 'flexRow justifyCenter alignCenter',\n        alignSelf: 'center',\n        [media.lgUp]: {\n            width: 1200,\n        },\n        [media.lgDown]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n    },\n    textContainer: {\n        composes: 'flexColumn',\n        flex: 1,\n    },\n    blockReverse: {\n        composes: 'flexEnd',\n    },\n    cards: {\n        composes: 'flexRow',\n        [media.lgUp]: {\n            flex: 1.2,\n        },\n        [media.smLg]: {\n            marginTop: theme.spacing(8),\n        },\n        [media.smDown]: {\n            marginTop: theme.spacing(5),\n        },\n    },\n    card: {\n        composes: 'flexColumn spaceBetween center',\n        width: 98,\n        padding: theme.spacing(3),\n        marginRight: theme.spacing(1),\n        height: 93,\n        backgroundColor: '#fff',\n        boxShadow: '0 8px 10px 0 rgba(0,0,0,.08)',\n        borderRadius: 10,\n        [media.lgUp]: {\n            position: 'relative',\n        },\n        [media.lgDown]: {\n            margin: theme.spacing(2),\n        },\n    },\n    cardBody: {\n        composes: 'flexColumn spaceBetween stretchSelf center',\n    },\n    label: {\n        composes: 'font-ProximaNova-bold',\n        fontSize: 16,\n        marginBottom: theme.spacing(1),\n    },\n    title: {\n        fontSize: 33,\n    },\n    descriptionContainer: {\n        [media.lgUp]: {\n            width: 400,\n        },\n        [media.smLg]: {\n            width: 600,\n        },\n        marginTop: theme.spacing(2),\n    },\n    description: {\n        fontWeight: 300,\n        lineHeight: '1.8em',\n        fontSize: 17,\n    },\n    reverse: {\n        [media.lgUp]: {\n            order: 1,\n        },\n    },\n}));\n\nconst getColor = (percent: number): string => {\n    let color;\n    if (percent > 50) color = '#13BB70';\n    if (percent > 25 && percent <= 50) color = '#FEE895';\n    if (percent <= 25) color = '#F4B63E';\n    return color;\n};\n\ninterface CardPositionI {\n    top: number;\n    left: number;\n}\nconst getCardPosition = (index: number): CardPositionI => {\n    let top;\n    let left;\n    switch (index) {\n        case (index = 0):\n            top = 100;\n            left = 0;\n            break;\n        case (index = 1):\n            left = 95;\n            break;\n        case (index = 2):\n            top = 100;\n            left = 275;\n            break;\n        case (index = 3):\n            top = 250;\n            left = -80;\n            break;\n        default:\n            top = 210;\n            left = 120;\n    }\n    return { top, left };\n};\n\ntype Props = { data: KnowledgeI; reverse: boolean };\nconst Knowledge: FC<Props> = ({ data, reverse }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgeRoot}>\n            <div className={classes.knowledgeContent}>\n                <div\n                    className={clsx(\n                        classes.textContainer,\n                        reverse ? classes.reverse : null,\n                        reverse ? classes.blockReverse : null\n                    )}>\n                    <Title text={data.title} level={2} className={classes.title} />\n                    <div className={classes.descriptionContainer}>\n                        <Text text={data.description} tagName=\"p\" className={classes.description} />\n                    </div>\n                </div>\n                <div className={classes.cards}>\n                    {data.technos.map(\n                        (d: TechnoI, index: number): ReactNode => (\n                            <div\n                                className={classes.card}\n                                key={d.name}\n                                style={{ top: getCardPosition(index).top, left: getCardPosition(index).left }}>\n                                <img alt=\"react\" src={`/images/technos/${d.image}.png`} />\n                                <div className={classes.cardBody}>\n                                    <Text text={d.name} className={classes.label} />\n                                    <ProgressiveBar color={getColor(d.value)} percent={d.value} height={8} />\n                                </div>\n                            </div>\n                        )\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Knowledge;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport { horizontalPaddingMobile, media } from '../../../utils/constants';\nimport { isReverse } from '../../../utils/utils';\n\nimport Knowledge from './Knowledge';\nimport OveralCard from './OveralCard';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgesRoot: {\n        composes: 'flexColumn center stretchSelf',\n        fontFamily: 'font-ProximaNova-regular',\n        paddingBottom: theme.spacing(15),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(horizontalPaddingMobile),\n            paddingRight: theme.spacing(horizontalPaddingMobile),\n        },\n    },\n    progressiveContainer: {\n        composes: 'flexColumn stretchSelf center',\n        width: '100%',\n        height: 200,\n    },\n}));\n\nexport interface TechnoI {\n    name: string;\n    image: string;\n    value: number;\n}\nexport interface KnowledgeI {\n    title: string;\n    description: string;\n    technos: TechnoI[];\n}\nconst data: KnowledgeI[] = [\n    {\n        title: 'Frontend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries, \n        but also the leap into electronic typesetting, remaining \n        essentially unchanged. It was popularised in the 1960s \n        with the release of Letraset sheets containing Lorem Ipsum \n        passages, and more recently with desktop publishing software \n        like Aldus PageMaker including versions of Lorem Ipsum.`,\n        technos: [\n            {\n                name: 'React',\n                image: 'react',\n                value: 98,\n            },\n            {\n                name: 'HTML',\n                image: 'html',\n                value: 100,\n            },\n            {\n                name: 'CSS',\n                image: 'css',\n                value: 100,\n            },\n            {\n                name: 'JQuery',\n                image: 'jquery',\n                value: 98,\n            },\n            {\n                name: 'Angular',\n                image: 'angular',\n                value: 50,\n            },\n        ],\n    },\n    {\n        title: 'Backend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries.`,\n        technos: [\n            {\n                name: 'React',\n                image: 'react',\n                value: 98,\n            },\n            {\n                name: 'HTML',\n                image: 'html',\n                value: 100,\n            },\n            {\n                name: 'CSS',\n                image: 'css',\n                value: 100,\n            },\n            {\n                name: 'JQuery',\n                image: 'jquery',\n                value: 98,\n            },\n            {\n                name: 'Angular',\n                image: 'angular',\n                value: 50,\n            },\n        ],\n    },\n];\n\nconst Knowledges: FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgesRoot} id=\"knowledges\">\n            <OveralCard />\n            {data.map(\n                (d: KnowledgeI, i: number): ReactNode => (\n                    <Knowledge data={d} key={i} reverse={isReverse(i)} />\n                )\n            )}\n        </div>\n    );\n};\n\nexport default Knowledges;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AAEA;AADA;AAIA;AADA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AADA;AA9EA;AAAA;AACA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlBA;AACA;AAmiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1KA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAVA;AAAA;AA2BA;AAEA;AACA;AAUA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAjCA;AAyCA;AACA;AAKA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA5BA;AACA;AAoCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AACA;AACA;;;;A","sourceRoot":""}