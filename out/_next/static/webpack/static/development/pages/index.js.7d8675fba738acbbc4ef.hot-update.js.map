{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.7d8675fba738acbbc4ef.hot-update.js","sources":["webpack:///./components/shared/Menu.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\n\nimport { openMenuAnimation } from '../../animations/app';\nimport { screenState } from '../../reducers/appReducer';\nimport { media } from '../../utils/constants';\n\ninterface MenuI {\n    url: string;\n    text: string;\n}\ninterface IndexI {\n    index: number;\n}\nconst menus: MenuI[] = [\n    {\n        url: '/',\n        text: 'Services',\n    },\n    {\n        url: '/',\n        text: 'Projets',\n    },\n];\n\nconst useStyles = createUseStyles((theme: any) => ({\n    rowCenter: {\n        composes: 'flexRow justifyCenter alignCenter',\n    },\n    menu: {\n        composes: 'flexColumn stretchSelf',\n    },\n    content: {\n        composes: 'flexRow spaceBetween center stretchSelf',\n        [media.lgDown]: {\n            padding: [theme.spacing(0), theme.spacing(4)],\n        },\n    },\n    leftMenu: {\n        composes: 'flexRow center flex1',\n        [media.lgDown]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n        },\n    },\n    logo: {\n        composes: '$rowCenter',\n        fontSize: 52,\n        fontStyle: 'italic',\n        padding: 0,\n        [media.lgDown]: {\n            fontSize: 42,\n        },\n    },\n    description: {\n        composes: '$rowCenter',\n        [media.lgUp]: {\n            paddingLeft: theme.spacing(6),\n            '& span': {\n                marginTop: 5,\n            },\n        },\n        fontSize: 16,\n        color: '#666',\n    },\n    rightMenu: {\n        composes: 'flexRow alignCenter justifyEnd flex1',\n    },\n    item: {\n        padding: [theme.spacing(3), theme.spacing(6)],\n    },\n    link: {\n        color: theme.color.active,\n        textDecoration: 'none',\n    },\n    menuMobile: {\n        composes: 'flexColumn stretchSelf',\n        backgroundColor: '#fff',\n        height: '100%',\n        flex: 1,\n        paddingTop: 15,\n        paddingBottom: 15,\n        position: 'absolute',\n        width: '100%',\n        top: (top) => top,\n    },\n    menuIcon: {\n        cursor: 'pointer',\n    },\n}));\n\nconst Menu = () => {\n    const isMobile = useSelector(screenState);\n    const [openMenu, setOpenMenu] = useState<boolean>(false);\n    const [height, setHeight] = useState(0);\n    const classes = useStyles(height);\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setHeight(ref.current.clientHeight);\n    }, []);\n\n    const menuItem = ({ url, text, index }: IndexI & MenuI) => (\n        <div className={classes.item} key={index}>\n            <a href={url} className={classes.link}>\n                {text}\n            </a>\n        </div>\n    );\n\n    const menuDesktop = (\n        <div className={classes.rightMenu}>\n            {menus.map(({ text, url }: MenuI, index: number): ReactNode => menuItem({ index, text, url }))}\n        </div>\n    );\n\n    const handleOpen = () => setOpenMenu((prev: boolean) => !prev);\n\n    const menuIconProps = {\n        alt: 'menu-icon',\n        onClick: handleOpen,\n        className: classes.menuIcon,\n    };\n    const menuIcon = (\n        <div className={classes.rightMenu}>\n            {!openMenu ? (\n                <img src={`/images/icons/menu.svg`} {...menuIconProps} />\n            ) : (\n                <img src={`/images/icons/menu-close.svg`} {...menuIconProps} />\n            )}\n        </div>\n    );\n\n    return (\n        <div className={classes.menu}>\n            <div className={classes.content} ref={ref}>\n                <div className={classes.leftMenu}>\n                    <div className={classes.logo}>Mika</div>\n                    <div className={classes.description}>\n                        <span>Some description about Mika</span>\n                    </div>\n                </div>\n                {isMobile ? menuIcon : menuDesktop}\n            </div>\n            {isMobile && openMenu && (\n                <motion.div\n                    initial={open ? 'hidden' : 'hidden'}\n                    initial={open ? 'hidden' : 'hidden'}\n                    animate={'visible'}\n                    className={classes.menuMobile} \n                    {...openMenuAnimation}>\n                    {menus.map(({ text, url }: MenuI, index: number): ReactNode => menuItem({ index, text, url }))}\n                </motion.div>\n            )}\n        </div>\n    );\n};\n\nexport default Menu;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAFA;AASA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAWA;AACA;AADA;AA7DA;AAAA;AACA;AAiEA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}