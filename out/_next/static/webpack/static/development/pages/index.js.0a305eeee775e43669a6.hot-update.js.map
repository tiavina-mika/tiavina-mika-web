{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0a305eeee775e43669a6.hot-update.js","sources":["webpack:///./components/home/knowledges/KnowledgeProgressBar.tsx","webpack:///./components/home/knowledges/Knowledges.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { media } from '../../../utils/constants';\n\nimport BlockTitle from './BlockTitle';\nimport ItemsChart from './ItemsChart';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgeProgressBarRoot: {\n        composes: 'flexColumn center flex1',\n        fontFamily: 'font-ProximaNova-regular',\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n        [media.lgDown]: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(5),\n        },\n        [media.mdDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    knowledgeProgressBarContent: {\n        composes: 'flexColumn center stretchSelf',\n        alignSelf: 'center',\n        [media.smDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    cards: {\n        marginTop: theme.spacing(4),\n        margin: -theme.spacing(1.8),\n        [media.smDown]: {\n            alignItems: 'flex-start',\n            justifyCenter: 'flex-start',\n            margin: [theme.spacing(1), 0],\n            marginTop: theme.spacing(1.3),\n            padding: 0,\n        },\n    },\n    card: {\n        width: 300,\n        padding: [theme.spacing(2.5), theme.spacing(5)],\n        margin: theme.spacing(1.8),\n        backgroundColor: '#fff',\n        boxShadow: '0 8px 10px 0 rgba(0,0,0,.08)',\n        borderRadius: 32,\n        fontSize: 18,\n        [media.smDown]: {\n            padding: [theme.spacing(3), theme.spacing(4)],\n            margin: [theme.spacing(1), 0],\n            fontSize: 14,\n        },\n    },\n    title: {\n        composes: 'justifyCenter',\n        textAlign: 'center',\n        fontSize: 22,\n        [media.smDown]: {\n            justifyContent: 'flex-start',\n            fontSize: 18,\n        },\n    },\n}));\n\ntype Props = { data: any };\n\nconst KnowledgeProgressBar: FC<Props> = ({ data }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgeProgressBarRoot}>\n            <div className={classes.knowledgeProgressBarContent}>\n                <BlockTitle text={data.title} className={classes.title} />\n                <ItemsChart\n                    items={data.items.sort((a, b) => b.value - a.value)}\n                    className={classes.cards}\n                    itemClassName={classes.card}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default KnowledgeProgressBar;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport { horizontalPaddingMobile, media } from '../../../utils/constants';\nimport { isReverse } from '../../../utils/utils';\n\nimport Knowledge from './KnowledgeDescription';\nimport KnowledgeProgressBar from './KnowledgeProgressBar';\nimport OveralCard, { KnowledgesMainChart } from './OveralCard';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgesRoot: {\n        composes: 'flexColumn alignCenter justifyCenter flex1',\n        fontFamily: 'font-ProximaNova-regular',\n        paddingBottom: theme.spacing(15),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(horizontalPaddingMobile),\n            paddingRight: theme.spacing(horizontalPaddingMobile),\n        },\n    },\n    overall: {\n        composes: 'flexColumn center stretchSelf',\n        [media.lgDown]: {\n            marginBottom: theme.spacing(4),\n        },\n    },\n    progressiveContainer: {\n        composes: 'flexColumn stretchSelf center',\n        width: '100%',\n        height: 200,\n    },\n    knowledgesProgressBar: {\n        marginBottom: theme.spacing(16),\n        composes: 'flexRow stretchSelf flex1',\n    },\n    knowledgesProgressBarContent: {\n        composes: 'flexRow stretchSelf flex1',\n        [media.lgUp]: {\n            width: 1300,\n        },\n        [media.mdLg]: {\n            width: 1000,\n        },\n        [media.mdDown]: {\n            flexDirection: 'column',\n        },\n    },\n}));\n\nexport interface TechnoI {\n    name: string;\n    image: string;\n    value: number;\n}\nexport interface KnowledgeI {\n    title: string;\n    description: string;\n    cardPositions?: number[][];\n    technos: TechnoI[];\n}\nconst dataDescription: KnowledgeI[] = [\n    {\n        title: 'Frontend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries, \n        but also the leap into electronic typesetting, remaining \n        essentially unchanged.`,\n        technos: [\n            {\n                name: 'React',\n                image: 'react',\n                value: 98,\n            },\n            {\n                name: 'HTML',\n                image: 'html',\n                value: 100,\n            },\n            {\n                name: 'CSS',\n                image: 'css',\n                value: 100,\n            },\n            {\n                name: 'JQuery',\n                image: 'jquery',\n                value: 98,\n            },\n            {\n                name: 'Angular',\n                image: 'angular',\n                value: 50,\n            },\n        ],\n    },\n    {\n        title: 'Backend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries.`,\n        cardPositions: [\n            [0, 100, 0],\n            [1, 0, 95],\n            [2, 150, 230],\n            [3, 100, 180],\n            [4, 210, 120],\n        ],\n        technos: [\n            {\n                name: 'Node',\n                image: 'node',\n                value: 95,\n            },\n            {\n                name: 'Symfony',\n                image: 'symfony',\n                value: 95,\n            },\n            {\n                name: 'Flask',\n                image: 'flask',\n                value: 80,\n            },\n            {\n                name: 'Rails',\n                image: 'rails',\n                value: 45,\n            },\n        ],\n    },\n];\n\ninterface KnowledgesProgressiveChartI {\n    title: string;\n    items: KnowledgesMainChart[];\n}\nconst dataProgressBar: KnowledgesProgressiveChartI[] = [\n    {\n        title: 'Language de programmation',\n        items: [\n            {\n                label: 'Javascript',\n                value: 95,\n                color: '#956FFF',\n            },\n            {\n                label: 'TypeScript',\n                value: 95,\n                color: '#FEE895',\n            },\n            {\n                label: 'Python',\n                value: 80,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'PHP',\n                value: 95,\n                color: '#95BF46',\n            },\n            {\n                label: 'Ruby',\n                value: 40,\n                color: '#00D8FF',\n            },\n        ],\n    },\n    {\n        title: 'Base de donn√©es',\n        items: [\n            {\n                label: 'MySQL',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'MongoDB',\n                value: 98,\n                color: '#FEE895',\n            },\n            {\n                label: 'ElasticSearch',\n                value: 75,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'PostgreSQL',\n                value: 88,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Design',\n        items: [\n            {\n                label: 'Photoshop',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'Illustrator',\n                value: 96,\n                color: '#FEE895',\n            },\n            {\n                label: 'InVision',\n                value: 80,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'Zepplin',\n                value: 55,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Webservice',\n        items: [\n            {\n                label: 'REST',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'GraphQL',\n                value: 96,\n                color: '#FEE895',\n            },\n            {\n                label: 'Parse Server',\n                value: 92,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'Firebase',\n                value: 55,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Gestion de code source',\n        items: [\n            {\n                label: 'GitHub',\n                value: 99,\n                color: '#956FFF',\n            },\n            {\n                label: 'GitLab',\n                value: 90,\n                color: '#FEE895',\n            },\n            {\n                label: 'BitBucket',\n                value: 95,\n                color: '#FD7A8C',\n            },\n        ],\n    },\n    {\n        title: 'Gestion de projet',\n        items: [\n            {\n                label: 'Trello',\n                value: 95,\n                color: '#956FFF',\n            },\n            {\n                label: 'Asana',\n                value: 80,\n                color: '#FEE895',\n            },\n            {\n                label: 'Jira',\n                value: 90,\n                color: '#FD7A8C',\n            },\n        ],\n    },\n];\n\nconst Knowledges: FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgesRoot} id=\"knowledges\">\n            <div className={classes.overall}>\n                <OveralCard />\n            </div>\n            {dataDescription.map(\n                (d: KnowledgeI, i: number): ReactNode => (\n                    <Knowledge data={d} key={i} reverse={isReverse(i)} />\n                )\n            )}\n            <div className={classes.knowledgesProgressBar}>\n                <div className={classes.knowledgesProgressBarContent}>\n                    {dataProgressBar.map((d, i) => (\n                        <KnowledgeProgressBar data={d} key={i} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Knowledges;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAFA;AAKA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAlDA;AAAA;AACA;AA0DA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAjCA;AAAA;AAkDA;AAEA;AACA;AAOA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA9BA;AAsCA;AACA;AAKA;AAOA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA9BA;AA2CA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAvBA;AA+BA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAlBA;AA0BA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAlBA;AA0BA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAlBA;AA0BA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAbA;AAqBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAbA;AACA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;;;;A","sourceRoot":""}