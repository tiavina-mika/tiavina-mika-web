{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0dcff9476fb5f5f1a960.hot-update.js","sources":["webpack:///./components/home/skills/Skills.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { useSelector } from 'react-redux';\n\nimport BlockTitle from '../../Common/BlockTitle';\nimport { animate, itemVariants } from '../../../animations/cards';\nimport { media, lgScreenWidth } from '../../../utils/constants';\nimport { screenState } from '../../../reducers/appReducer';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    fullColumn: {\n        composes: 'flexColumn stretchSelf',\n    },\n    root: {\n        composes: '$fullColumn justifyCenter',\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n        },\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            marginTop: theme.spacing(8),\n        },\n    },\n    content: {\n        composes: '$fullColumn center',\n        [media.lgUp]: {\n            marginTop: theme.spacing(6),\n        },\n    },\n    center: {\n        composes: 'flexRow justifyCenter',\n        [media.lgUp]: {\n            width: lgScreenWidth - 300,\n            marginTop: theme.spacing(4),\n        },\n    },\n    type: {\n        composes: '$fullColumn flex1',\n        [media.mdDown]: {\n            marginBottom: theme.spacing(4),\n        },\n    },\n    title: {\n        composes: 'flexRow center stretchSelf',\n        fontFamily: 'Tungsten-Medium',\n        color: '#52575f',\n        fontSize: 24,\n        textTransform: 'uppercase',\n        marginBottom: theme.spacing(3),\n        '& span': {\n            marginLeft: 10,\n        },\n        [media.mdDown]: {\n            marginBottom: theme.spacing(1),\n        },\n    },\n    items: {\n        composes: 'flexColumn flexStart',\n        '& span': {\n            marginLeft: 10,\n        },\n        [media.mdUp]: {\n            marginBottom: theme.spacing(8),\n        },\n    },\n    item: {\n        composes: 'flexRow center',\n        marginBottom: theme.spacing(2),\n        [media.smDown]: {\n            marginBottom: 0,\n        },\n        width: 300,\n        '& h6': {\n            marginLeft: 10,\n            fontFamily: 'Montserrat-Regular',\n            fontSize: 18,\n            lineHeight: 1.6,\n            letterSpacing: '0.85px',\n            color: '#fff',\n            [media.smDown]: {\n                fontSize: 16,\n            },\n        },\n    },\n}));\n\nconst items = [\n    {\n        type: 'Language de Programmation',\n        icon: 'programing-language',\n        experiences: [\n            {\n                name: 'Javascript',\n                level: 'expert',\n            },\n            {\n                name: 'TypeScript',\n                level: 'expert',\n            },\n            {\n                name: 'PHP',\n                level: 'expert',\n            },\n            {\n                name: 'Python',\n                level: 'medium',\n            },\n            {\n                name: 'Ruby',\n                level: 'beginner',\n            },\n        ],\n    },\n    {\n        type: 'Backend',\n        icon: 'backend',\n        experiences: [\n            {\n                name: 'NodeJs',\n                level: 'expert',\n            },\n            {\n                name: 'Symfony',\n                level: 'expert',\n            },\n            {\n                name: 'Flask',\n                level: 'expert',\n            },\n            {\n                name: 'Ruby on Rails',\n                level: 'beginner',\n            },\n        ],\n    },\n    {\n        type: 'Frontend',\n        icon: 'frontend',\n        experiences: [\n            {\n                name: 'ReactJs',\n                level: 'expert',\n            },\n            {\n                name: 'HTML',\n                level: 'expert',\n            },\n            {\n                name: 'CSS',\n                level: 'expert',\n            },\n            {\n                name: 'JQuery',\n                level: 'expert',\n            },\n            {\n                name: 'Angular',\n                level: 'medium',\n            },\n        ],\n    },\n    {\n        type: 'Base de données',\n        icon: 'database',\n        experiences: [\n            {\n                name: 'MongoDB',\n                level: 'expert',\n            },\n            {\n                name: 'MySQL',\n                level: 'expert',\n            },\n            {\n                name: 'PostgreSQL',\n                level: 'expert',\n            },\n            {\n                name: 'Elastic Search',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Versioning',\n        icon: 'versioning',\n        experiences: [\n            {\n                name: 'GitHub',\n                level: 'expert',\n            },\n            {\n                name: 'GitLab',\n                level: 'expert',\n            },\n            {\n                name: 'BitBucket',\n                level: 'expert',\n            },\n        ],\n    },\n\n    {\n        type: 'Webservice',\n        icon: 'frontend',\n        experiences: [\n            {\n                name: 'REST API',\n                level: 'expert',\n            },\n            {\n                name: 'GraphQL',\n                level: 'expert',\n            },\n            {\n                name: 'Parse Server',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Design',\n        icon: 'Design',\n        experiences: [\n            {\n                name: 'Adobe Photoshop',\n                level: 'expert',\n            },\n            {\n                name: 'Adobe Illustrator',\n                level: 'expert',\n            },\n            {\n                name: 'InVision',\n                level: 'expert',\n            },\n            {\n                name: 'Zepplin',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Gestion Projet',\n        icon: 'project-gestion',\n        experiences: [\n            {\n                name: 'Jira',\n                level: 'expert',\n            },\n            {\n                name: 'Trello',\n                level: 'expert',\n            },\n            {\n                name: 'Asana',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Outils communication',\n        icon: 'communication',\n        experiences: [\n            {\n                name: 'Skype',\n                level: 'expert',\n            },\n            {\n                name: 'Microsoft Teams',\n                level: 'expert',\n            },\n            {\n                name: 'Slack',\n                level: 'expert',\n            },\n            {\n                name: 'Google Sheet',\n                level: 'expert',\n            },\n        ],\n    },\n];\n\nconst Skills: FC = () => {\n    const classes = useStyles();\n    const isMobile = useSelector(screenState);\n\n    const [ref, inView] = useInView({\n        threshold: 0.1,\n        triggerOnce: false,\n    });\n    /** Components */\n    const Div = isMobile ? 'div' : motion.div;\n\n    /** Animation */\n    const itemsAnimation = (inView) => (isMobile ? {} : animate(inView));\n    const itemAnimation = isMobile ? {} : itemVariants;\n\n    return (\n        <div className={classes.root}>\n            <BlockTitle\n                title=\"Connaissance\"\n                subtitle=\"Ce que je maîtrise\"\n                right\n                startAnimation={inView}\n                icon=\"skills\"\n            />\n            <div className={classes.content} ref={ref}>\n                <Div className={classes.center} {...itemsAnimation(inView)}>\n                    {items.map((item, index) => (\n                        <Div className={classes.type} key={index} {...itemAnimation}>\n                            <h6 className={classes.title}>\n                                <img src={`/images/icons/${item.icon}.svg`} alt=\"\" />\n                                <span>{item.type}</span>\n                            </h6>\n                            <Div className={classes.items} {...itemsAnimation(inView)}>\n                                {item.experiences.map((experience, index) => (\n                                    <Div className={classes.item} key={index} {...itemAnimation}>\n                                        <img src={`/images/icons/${experience.level}.svg`} alt=\"\" />\n                                        <h6>{experience.name}</h6>\n                                    </Div>\n                                ))}\n                            </Div>\n                        </Div>\n                    ))}\n                </Div>\n            </div>\n        </div>\n    );\n};\n\nexport default Skills;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AADA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AADA;AAxEA;AAAA;AA+EA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AApBA;AA2BA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AApBA;AA2BA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAoBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAmBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAmBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AACA;AAuBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAJA;AAAA;AAAA;AAQA;AACA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAPA;AAoBA;AACA;AACA;;;;A","sourceRoot":""}