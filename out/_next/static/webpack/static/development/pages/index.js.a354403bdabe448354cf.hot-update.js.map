{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a354403bdabe448354cf.hot-update.js","sources":["webpack:///./components/home/interests/Interests.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { useSelector } from 'react-redux';\n\nimport BlockTitle from '../../Common/BlockTitle';\nimport { animate, itemVariants } from '../../../animations/cards';\nimport { media, lgScreenWidth } from '../../../utils/constants';\nimport { screenState } from '../../../reducers/appReducer';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    fullColumn: {\n        composes: 'flexColumn stretchSelf',\n    },\n    root: {\n        composes: '$fullColumn justifyCenter',\n        marginTop: theme.spacing(20),\n        marginBottom: theme.spacing(30),\n        [media.mdDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n        },\n    },\n    content: {\n        composes: '$fullColumn center',\n        [media.mdUp]: {\n            marginTop: theme.spacing(6),\n        },\n    },\n    center: {\n        composes: 'flexRow justifyCenter',\n        [media.lgUp]: {\n            width: lgScreenWidth - 300,\n            marginTop: theme.spacing(4),\n        },\n        [media.lgDown]: {\n            justifyContent: 'flex-start',\n            backgroundColor: 'red'\n        },\n        [media.mdLg]: {\n            width: lgScreenWidth - 600,\n        },\n    },\n    type: {\n        composes: '$fullColumn flex1',\n    },\n    label: {\n        fontFamily: 'Tungsten-Medium',\n        color: '#fff',\n        fontSize: 24,\n        marginBottom: theme.spacing(3),\n        letterSpacing: 1.5,\n    },\n    items: {\n        composes: 'flexColumn flexStart',\n        marginBottom: theme.spacing(8),\n        '& span': {\n            marginLeft: 10,\n        },\n    },\n    item: {\n        composes: 'flexColumn justifyCenter center',\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n        width: 90,\n        [media.smDown]: {\n            marginBottom: 0,\n        },\n    },\n    icon: {\n        composes: 'flexRow justifyCenter center',\n        border: '1px solid #fff',\n        height: 70,\n        width: 70,\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nconst items = [\n    {\n        name: 'musique',\n        icon: 'music',\n    },\n    {\n        name: 'technologie',\n        icon: 'technology',\n    },\n    {\n        name: 'littérature',\n        icon: 'literature',\n    },\n    {\n        name: 'jeux vidéo',\n        icon: 'game',\n    },\n    {\n        name: 'science',\n        icon: 'science',\n    },\n    {\n        name: 'géopolitique',\n        icon: 'geopolitic',\n    },\n    {\n        name: 'chess',\n        icon: 'chess',\n    },\n    {\n        name: 'manga',\n        icon: 'manga',\n    },\n    {\n        name: 'histoire',\n        icon: 'history',\n    },\n    {\n        name: 'voiture',\n        icon: 'car',\n    },\n    {\n        name: 'comics',\n        icon: 'comics',\n    },\n];\n\nconst Interests: FC = () => {\n    const classes = useStyles();\n    const isMobile = useSelector(screenState);\n\n    const [ref, inView] = useInView({\n        threshold: 0.1,\n        triggerOnce: false,\n    });\n    /** Components */\n    const Div = isMobile ? 'div' : motion.div;\n\n    /** Animation */\n    const itemsAnimation = (inView) => (isMobile ? {} : animate(inView));\n    const itemAnimation = isMobile ? {} : itemVariants;\n\n    return (\n        <div className={classes.root}>\n            <BlockTitle\n                title=\"Passions et loisirs\"\n                subtitle=\"Ce que j'aime\"\n                right\n                startAnimation={inView}\n                icon=\"passion\"\n            />\n            <div className={classes.content} ref={ref}>\n                <Div className={classes.center} {...itemsAnimation(inView)}>\n                    {items.map((item, index) => (\n                        <Div className={classes.item} key={index} {...itemAnimation}>\n                            <div className={classes.icon}>\n                                <img src={`/images/icons/${item.icon}.svg`} alt=\"\" />\n                            </div>\n                            <h6 className={classes.label}>{item.name}</h6>\n                        </Div>\n                    ))}\n                </Div>\n            </div>\n        </div>\n    );\n};\n\nexport default Interests;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AA3DA;AAAA;AAoEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAJA;AAAA;AAAA;AAQA;AACA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAYA;AACA;AACA;;;;A","sourceRoot":""}