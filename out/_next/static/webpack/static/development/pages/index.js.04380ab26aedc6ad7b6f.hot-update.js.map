{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.04380ab26aedc6ad7b6f.hot-update.js","sources":["webpack:///./components/home/projects/Project.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Plx from 'react-plx';\nimport clsx from 'clsx';\n\nimport { ProjectsProps } from './Projects';\n// import ProjectLink from './ProjectLink';\n\nconst SYSTEM_CONTENT_BLOCK_WIDTH = 380;\n\nconst useStyles = createUseStyles((theme: any) => ({\n    root: {\n        composes: 'flexRow justifyCenter flex1',\n        // height: '280vh',\n        // width: '100%',\n    },\n    content: {\n        composes: 'flexRow justifyCenter',\n        width: 900,\n        backgroundColor: 'green',\n        // height: '280vh',\n        // width: '100%',\n    },\n    textBlockRoot: {\n        composes: 'flexRow',\n        flex: 1,\n        // maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n    },\n    textPlx: {\n        maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n        padding: [theme.spacing(8), theme.spacing(6)],\n        // top: '20%',\n        // opacity: 0,\n        // position: 'fixed',\n        // transform: 'translateX(-20vw)',\n    },\n    reverseTextPlx: {\n        transform: 'translateX(0vw)',\n    },\n    imageBlockRoot: {\n        composes: 'flexColumn center',\n        flex: 1.3,\n    },\n    imageBlockReverse: {\n        order: -1,\n    },\n    img: {\n        width: '100%',\n        margin: 0,\n        // transform: 'translateY(50%)',\n    },\n    imagePlx: {\n        composes: 'flexRow justifyEnd stretchSelf blue',\n        width: '100%',\n    },\n    imageContainer: {\n        composes: 'flexRow justifyEnd stretchSelf red',\n        paddingRight: theme.spacing(6),\n        transform: 'translate(0%, 0px) rotate(-4e-05deg) rotateY(15deg) rotateX(9.99994deg)',\n        transformOrigin: 'center top',\n        pointerEvents: 'none',\n    },\n    textTrigger: {\n        // marginTop: '120vh',\n    },\n    imageTrigger: {\n        // marginTop: '50vh',\n    },\n    scrollY: {\n        height: '200vh',\n    },\n    description: {\n        composes: 'font-Montserrat-regular',\n        lineHeight: 1.6,\n    },\n    subtitle: {\n        composes: 'font-tungsten-regular',\n        fontSize: 32,\n        letterSpacing: '0.16em',\n        color: theme.color.subtitle,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        marginTop: theme.spacing(6),\n        justifyContent: 'flex-start !important',\n    },\n    linkText: {\n        justifyContent: 'flex-start !important',\n    },\n}));\n\ntype Props = {\n    // image: string;\n    reverse?: boolean;\n    // title: string;\n    // description: string;\n    // subtitle: string;\n};\n\nconst Project: FC<ProjectsProps & Props> = ({ image, reverse, title, description, subtitle }) => {\n    const classes = useStyles();\n    const triggerClass = title.split(' ').join('-') + '-trigger';\n    const textTriggerClass = 'text' + triggerClass;\n    const imageTriggerClass = 'image' + triggerClass;\n\n    \n    const imageParallaxData = [\n        {\n            start: `.${imageTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: -10,\n                    unit: 'vh',\n                    property: 'translateY',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n        {\n            start: `.${imageTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 10,\n                    endValue: 0,\n                    unit: 'vh',\n                    property: 'translateY',\n                },\n            ],\n        },\n        \n        // {\n        //     start: `.${imageTriggerClass}`,\n        //     startOffset: '60vh',\n        //     duration: '30vh',\n        //     properties: [\n        //         {\n        //             startValue: 0,\n        //             endValue: reverse ? -13 : 15,\n        //             unit: 'vw',\n        //             property: 'translateX',\n        //         },\n        //     ],\n        // },\n        // {\n        //     start: `.${imageTriggerClass}`,\n        //     startOffset: '190vh',\n        //     duration: '20vh',\n        //     properties: [\n        //         {\n        //             startValue: 1,\n        //             endValue: 0,\n        //             property: 'opacity',\n        //         },\n        //     ],\n        // },\n    ];\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <div className={clsx(classes.imageBlockRoot, reverse ? classes.imageBlockReverse : null)}>\n                    {/* <div className={clsx(imageTriggerClass, classes.imageTrigger)} /> */}\n                    {/* <Plx parallaxData={imageParallaxData} className={classes.imagePlx}>\n                        <img src={`/images/${image}`} alt={image} className={classes.img} />\n                    </Plx> */}\n                    {/* <Plx className={classes.imagePlx} parallaxData={imageParallaxData} > */}\n                        <div className={classes.imageContainer} >\n                            <img src={`/images/${image}`} alt={image} className={classes.img} />\n                        </div>\n                    {/* </Plx> */}\n                    {/* <div className={classes.scrollY} /> */}\n                </div>\n                <div className={classes.textBlockRoot}>\n                    {/* <div className={clsx(textTriggerClass, classes.textTrigger)} /> */}\n                    <div className={clsx(classes.textPlx, reverse ? classes.reverseTextPlx : null)}>\n                        <h2>{title}</h2>\n                        <h3 className={classes.subtitle}>{subtitle}</h3>\n                        <div className={classes.description}>{description}</div>\n                        {/* <ProjectLink url={link} className={classes.link} linkClassName={classes.linkText} /> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Project;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAJA;AAKA;AACA;AACA;AACA;AAEA;AACA;AANA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAQA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AADA;AA7EA;AAAA;AACA;AAyFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAVA;AAkBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAJA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AAyDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;;;;A","sourceRoot":""}