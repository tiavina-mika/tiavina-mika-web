{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a8c71360df5b915dfe30.hot-update.js","sources":["webpack:///./components/home/projects/Project.tsx","webpack:///./components/home/projects/Projects.tsx","webpack:///./components/home/projects/index.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { media, projectCardWidth } from '../../../utils/constants';\n\nimport Text from '../../shared/Text';\nimport Title from '../../shared/Title';\nimport { ProjectI } from './Projects';\n\ninterface ResponsiveCardWidthI {\n    lgXl: string;\n    mdLg: string;\n}\nexport const RESPONSIVE_CARD_WIDTH: ResponsiveCardWidthI = {\n    lgXl: '42vw',\n    mdLg: '45vw',\n};\nconst useStyles = createUseStyles((theme: any) => ({\n    block: {\n        composes: 'flexRow',\n        position: 'relative',\n        borderRadius: 10,\n        transition: 'all .5s cubic-bezier(.19,1,.4,1)',\n        width: projectCardWidth,\n        height: 590,\n        backgroundColor: ({ color }: Pick<ProjectI, 'color'>) => '#' + color,\n        marginBottom: theme.spacing(6),\n        color: ({ isDark }) => (isDark ? '##54575a' : '#fff'),\n        [media.lgXl]: {\n            width: RESPONSIVE_CARD_WIDTH.lgXl,\n            height: '43vw',\n        },\n        [media.mdLg]: {\n            width: RESPONSIVE_CARD_WIDTH.mdLg,\n            height: '47vw',\n        },\n        [media.smMd]: {\n            width: '46vw',\n            height: '48vw',\n        },\n        [media.smDown]: {\n            width: '100%',\n            height: 366,\n        },\n    },\n    center: {\n        composes: 'stretchSelf flex1',\n        padding: '10% 12%',\n        [media.mdLg]: {\n            padding: '6% 8%',\n        },\n    },\n    cardLink: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 1,\n        width: '100%',\n        height: '100%',\n    },\n    content: {\n        height: '100%',\n        display: 'grid',\n        gridTemplateColumns: '100%',\n        gridTemplateRows: 'repeat(3, auto) 1fr',\n        gridGap: theme.spacing(3),\n        [media.smUp]: {\n            '&:hover': {\n                // the see more button\n                '& div:last-child div': {\n                    backgroundColor: '#fff',\n                    transform: `translate(${theme.spacing(0)}px,-${theme.spacing(2)}px)`,\n                    color: theme.colors.secondary,\n                },\n                // grey right arrow\n                '& img:last-child': {\n                    visibility: 'visible',\n                },\n                // white right arrow\n                '& img:first-child': {\n                    visibility: 'hidden',\n                },\n                // description block animation\n                '& div:nth-child(3)': {\n                    opacity: 1,\n                },\n            },\n        },\n        [media.mdDown]: {\n            gridGap: theme.spacing(1),\n        },\n        [media.smDown]: {\n            gridTemplateRows: 'repeat(2, auto) 1fr',\n        },\n    },\n    subtitle: {\n        fontSize: 18,\n        [media.smMd]: {\n            fontSize: 16,\n            fontWeight: 300,\n        },\n        [media.xsMd]: {\n            fontSize: 16,\n        },\n    },\n    title: {\n        fontSize: 26,\n        width: '60%',\n        [media.smMd]: {\n            fontSize: 20,\n            width: '80%',\n        },\n        [media.xsMd]: {\n            width: '40%',\n        },\n        [media.mdDown]: {\n            fontSize: 18,\n        },\n    },\n    descriptionContainer: {\n        width: '40%',\n        lineHeight: 1.43,\n        opacity: 0,\n        transition: 'opacity .5s cubic-bezier(.19,1,.4,1)',\n        [media.smMd]: {\n            width: '60%',\n        },\n        [media.smDown]: {\n            // visibility: 'hidden',\n            display: 'none',\n        },\n    },\n    description: {\n        [media.xsMd]: {\n            fontSize: 14,\n        },\n    },\n    seeMore: {\n        composes: 'flexRow flexEnd',\n    },\n    seeMoreButton: {\n        transition: 'all .5s cubic-bezier(.19,1,.4,1)',\n        padding: [theme.spacing(2), theme.spacing(4)],\n        transform: `translate(-${theme.spacing(4)}px,-${theme.spacing(2)}px)`,\n        borderRadius: 999,\n        '& img:last-child': {\n            visibility: 'hidden',\n        },\n    },\n    seeMoreText: {\n        fontSize: 14,\n        marginRight: theme.spacing(2),\n    },\n}));\n\nconst Project: FC<ProjectI> = ({ title, subtitle, url, color, description }) => {\n    const classes = useStyles({ color: color.color, isDark: color.dark });\n\n    return (\n        <div className={classes.block}>\n            <div className={classes.center}>\n                <div className={classes.content}>\n                    <a href={url} className={classes.cardLink} />\n                    <div>\n                        <Title text={subtitle} level={4} className={classes.subtitle} />\n                    </div>\n                    <div className={classes.title}>\n                        <Title text={title} level={3} />\n                    </div>\n                    <div className={classes.descriptionContainer}>\n                        <Text text={description} tagName=\"p\" className={classes.description} />\n                    </div>\n                    <div className={classes.seeMore}>\n                        <div className={classes.seeMoreButton}>\n                            <Text text=\"Learn more\" className={classes.seeMoreText} />\n                            <img src={`/images/icons/right-arrow${color.dark ? '' : '-light'}.svg`} alt=\"arrow right\" />\n                            <img src={`/images/icons/right-arrow${color.dark ? '-light' : ''}.svg`} alt=\"arrow right\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Project;\n","import React, { ElementType, Fragment, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useWindowSize } from 'react-use';\nimport Plx from 'react-plx';\n\nimport { md, media, projectCardWidth } from '../../../utils/constants';\nimport Layout from '../../shared/Layout';\nimport Text from '../../shared/Text';\nimport Title from '../../shared/Title';\nimport ProjectGrid, { RESPONSIVE_CARD_WIDTH } from './Project';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    projectsRoot: {\n        composes: 'flexRow',\n    },\n    projectsContent: {\n        composes: 'flexRow flex1',\n        [media.smDown]: {\n            flexDirection: 'column',\n        },\n    },\n    left: {\n        composes: 'flexColumn flex1 justifyCenter flexEnd',\n        [media.smMd]: {\n            marginRight: theme.spacing(1.5),\n        },\n        [media.mdUp]: {\n            marginRight: theme.spacing(3),\n        },\n        [media.smDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    right: {\n        composes: 'flexColumn flex1 justifyCenter flexStart',\n        [media.smMd]: {\n            marginLeft: theme.spacing(1.5),\n        },\n        [media.mdUp]: {\n            marginLeft: theme.spacing(3),\n        },\n        [media.smDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    blockTitle: {\n        position: 'relative',\n        composes: 'flexColumn',\n        paddingTop: theme.spacing(12),\n        paddingBottom: theme.spacing(16),\n        [media.lgXl]: {\n            width: RESPONSIVE_CARD_WIDTH.lgXl,\n        },\n        [media.mdLg]: {\n            width: RESPONSIVE_CARD_WIDTH.mdLg,\n        },\n        [media.xlUp]: {\n            width: projectCardWidth,\n        },\n        [media.smMd]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(9),\n        },\n        [media.smDown]: {\n            paddingTop: theme.spacing(3),\n            paddingBottom: theme.spacing(5),\n        },\n    },\n    blockTitleContent: {\n        [media.smMd]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            alignSelf: 'stretch',\n        },\n        [media.mdUp]: {\n            paddingLeft: theme.spacing(5),\n            paddingRight: theme.spacing(5),\n        },\n    },\n    blockDescription: {\n        marginTop: theme.spacing(2),\n        width: '80%',\n        [media.smMd]: {\n            width: '60%',\n            lineHeight: 1.4,\n            textAlign: 'center',\n            fontSize: 16,\n        },\n        [media.smDown]: {\n            fontSize: 14,\n            width: '100%',\n            lineHeight: 1.6,\n        },\n    },\n    block: {\n        borderRadius: 10,\n        transition: 'all .5s cubic-bezier(.19,1,.4,1)',\n        width: 580,\n        height: 590,\n        backgroundColor: '#d3b589',\n        marginBottom: theme.spacing(6),\n    },\n}));\n\ninterface ColorI {\n    color: string;\n    dark?: boolean;\n}\nexport interface ProjectI {\n    id: string;\n    subtitle: string;\n    title: string;\n    description: string;\n    url: string;\n    color: ColorI;\n}\nconst colors: ColorI[] = [\n    { color: 'd3b589' },\n    { color: '825c79' },\n    { color: 'eeedea', dark: true },\n    { color: 'b5d4cc' },\n    { color: '7ca5cf' },\n];\nconst projects: Omit<ProjectI, 'color'>[] = [\n    {\n        id: '1',\n        subtitle: 'Some card subtitle',\n        title: 'Some card title, two line card title',\n        description: 'Some long, very very long card description, and very very long card description',\n        url: '/',\n    },\n    {\n        id: '2',\n        subtitle: 'Some card subtitle 2',\n        title: 'Some card title 2',\n        description: 'Some long, very very long card description, and very very long card description 2',\n        url: '/',\n    },\n    {\n        id: '3',\n        subtitle: 'Some card subtitle 3',\n        title: 'Some card title, two line card title 3',\n        description: 'Some long, very very long card description, and very very long card description 3',\n        url: '/',\n    },\n    {\n        id: '4',\n        subtitle: 'Some card subtitle 4',\n        title: 'Some card title, two line card title 4',\n        description: 'Some long, very very long card description, and very very long card description 4',\n        url: '/',\n    },\n    {\n        id: '5',\n        subtitle: 'Some card subtitle 5',\n        title: 'Some card title, two line card title 5',\n        description: 'Some long, very very long card description, and very very long card description 5',\n        url: '/',\n    },\n];\n\nconst Projects = () => {\n    const classes = useStyles();\n    const [leftCardsData, setLeftCardData] = useState<ProjectI[]>([]);\n    const [rightCardsData, setRightCardData] = useState<ProjectI[]>([]);\n    const { width } = useWindowSize();\n    const [isTablet, setIsTablet] = useState<boolean>(false);\n\n    useEffect(() => {\n        setIsTablet(width <= md);\n    }, [width]);\n\n    const parallaxData = useMemo(() => {\n        return [\n            {\n                start: 'self',\n                duration: '160vh',\n                properties: [\n                    {\n                        startValue: 0,\n                        endValue: -240,\n                        unit: 'px',\n                        property: 'translateY',\n                    },\n                ],\n            },\n            {\n                start: 'self',\n                duration: '20vh',\n                properties: [\n                    {\n                        startValue: 0,\n                        endValue: 1,\n                        property: 'opacity',\n                    },\n                ],\n            },\n        ];\n    }, []);\n    useEffect(() => {\n        const split: number = projects.length <= 5 ? 2 : 3;\n        const newProjects = projects.map(\n            (project: Omit<ProjectI, 'color'>, index: number): ProjectI => ({\n                ...project,\n                color: colors[index],\n            })\n        );\n        const leftCards: ProjectI[] = [...newProjects].splice(0, split);\n        const rightCards: ProjectI[] = [...newProjects].splice(split, projects.length);\n        setLeftCardData([...leftCards]);\n        setRightCardData([...rightCards]);\n    }, []);\n\n    const splicedPorject = (project: ProjectI): ReactNode => <ProjectGrid key={project.id} {...project} />;\n\n    const blockTitle: ReactNode = (\n        <div className={classes.blockTitle}>\n            <div className={classes.blockTitleContent}>\n                <Title text=\"Some Title\" level={2} />\n                <Text\n                    className={classes.blockDescription}\n                    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi dapibus metus non nunc tempor, eu ultricies mi euismod.\"\n                    tagName=\"p\"\n                />\n            </div>\n        </div>\n    );\n    const Component: ElementType = isTablet ? Fragment : Plx;\n    const otherProps = isTablet ? {} : { parallaxData };\n    return (\n        <Layout className={classes.projectsRoot}>\n            {isTablet && blockTitle}\n            <div className={classes.projectsContent}>\n                <div className={classes.left}>\n                    {!isTablet && blockTitle}\n                    {leftCardsData.map(splicedPorject)}\n                </div>\n                <div className={classes.right}>\n                    <Component {...otherProps}>{rightCardsData.map(splicedPorject)}</Component>\n                </div>\n            </div>\n        </Layout>\n    );\n};\nexport default Projects;\n","import Projects from './Projects';\n\nexport default Projects;\n","import React, { useEffect } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useDispatch } from 'react-redux';\nimport Head from 'next/head';\n\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { getScreen } from '../reducers/appReducer';\nimport { media } from '../utils/constants';\nimport Header from '../components/shared/Header';\nimport Competences from '../components/home/competences';\nimport Projects from '../components/home/projects';\nimport Knowledges from '../components/home/knowledges';\nimport Text from '../components/shared/Text';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    root: {\n        composes: 'flexColumn flexCenter alignCenter stretchSelf flex1',\n    },\n    main: {\n        composes: 'flexColumn stretchSelf flex1',\n        backgroundColor: '#000',\n        color: '#fff',\n        [media.lgDown]: {\n            flexDirection: 'column',\n        },\n    },\n    warning: {\n        composes: 'flexRow stretchSelf justifyCenter',\n        padding: 20,\n        backgroundColor: 'red',\n    },\n    warningText: {\n        color: '#fff',\n    },\n    emailLink: {\n        color: theme.colors.active,\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst headerDescription = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`;\n\nconst Home = () => {\n    const size = useWindowSize();\n    const classes = useStyles({ size });\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getScreen(size.width));\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Head>\n                <title>Tiavina Michael Ralainirina</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n                <meta name=\"title\" content=\"Tiavina Michael Ralainirina Portfolio\" />\n                <meta name=\"description\" content=\"FullStack Developer from Madagascar.\" />\n            </Head>\n            <div className={classes.warning}>\n                <Text className={classes.warningText}>\n                    {`Le site est actuellement en cours de développement. Pour plus d'info veuillez me contacter`}\n                    <a href=\"mailto:tiavinamika@gmail.com\" className={classes.emailLink}>\n                        ici\n                    </a>\n                </Text>\n            </div>\n            <Header\n                title=\"Tiavina Michael RALAINIRINA\"\n                subtitle=\"FullStack Developer - UI / UX Designer\"\n                description={headerDescription}\n            />\n            <Competences />\n            <Projects />\n            <Knowledges />\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAhBA;AADA;AAuBA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAIA;AACA;AAFA;AAKA;AAEA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AAFA;AAtIA;AAAA;AACA;AA2IA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApFA;AAAA;AA0GA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAJA;AAaA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAJA;AAYA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;;;;;;;;;;;;ACrPA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AApBA;AAAA;AA0BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}