{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.81a60858279b37cd6a17.hot-update.js","sources":["webpack:///./components/home/projects/PlxLayout.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Plx from 'react-plx';\nimport clsx from 'clsx';\n\nimport { ProjectsProps } from './Projects';\nimport ProjectLink from './ProjectLink';\n\nconst SYSTEM_CONTENT_BLOCK_WIDTH = 380;\n\nconst useStyles = createUseStyles((theme: any) => ({\n    root: {\n        composes: 'flexRow justifyCenter',\n        height: '280vh',\n        width: '100%',\n    },\n    textBlockRoot: {\n        composes: 'textBlock',\n        maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n    },\n    textPlx: {\n        maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n        top: '20%',\n        opacity: 0,\n        position: 'fixed',\n        transform: 'translateX(-20vw)',\n    },\n    reverseTextPlx: {\n        transform: 'translateX(0vw)',\n    },\n    imageBlockRoot: {\n        composes: 'flexColumn alignCenter justifyCenter',\n    },\n    imageBlockReverse: {\n        order: -1,\n    },\n    img: {\n        width: '100%',\n        margin: 0,\n        transform: 'translateY(50%)',\n    },\n    imagePlx: {\n        pointerEvents: 'none',\n        bottom: 0,\n        opacity: 0,\n        position: 'fixed',\n        left: '13vw',\n    },\n    textTrigger: {\n        marginTop: '120vh',\n    },\n    imageTrigger: {\n        marginTop: '50vh',\n    },\n    scrollY: {\n        height: '200vh',\n    },\n    description: {\n        composes: 'font-Montserrat-regular',\n        lineHeight: 1.6,\n    },\n    subtitle: {\n        composes: 'font-tungsten-regular',\n        fontSize: 32,\n        letterSpacing: '0.16em',\n        color: theme.color.subtitle,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        // composes: 'justifyStart',\n        backgroundColor: 'red',\n        justifyContent: 'flex-start !important'\n    },\n}));\n\ntype Props = {\n    reverse?: boolean;\n};\n\nconst PlxLayout: FC<Props & ProjectsProps> = ({ image, reverse, title, description, subtitle, link }) => {\n    const classes = useStyles();\n    const triggerClass = title.split(' ').join('-') + '-trigger';\n    const textTriggerClass = 'text' + triggerClass;\n    const imageTriggerClass = 'image' + triggerClass;\n\n    const textParallaxData = [\n        {\n            start: `.${textTriggerClass}`,\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n        {\n            start: `.${textTriggerClass}`,\n            startOffset: '10vh',\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: reverse ? 0 : -20,\n                    endValue: reverse ? 16 : -38,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n            ],\n        },\n        {\n            start: `.${textTriggerClass}`,\n            startOffset: '90vh',\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 1,\n                    endValue: 0,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    const imageParallaxData = [\n        {\n            start: `.${imageTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: -40,\n                    unit: 'vh',\n                    property: 'translateY',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n        {\n            start: `.${imageTriggerClass}`,\n            startOffset: '60vh',\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: reverse ? -13 : 15,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n            ],\n        },\n        {\n            start: `.${imageTriggerClass}`,\n            startOffset: '190vh',\n            duration: '20vh',\n            properties: [\n                {\n                    startValue: 1,\n                    endValue: 0,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.textBlockRoot}>\n                <div className={clsx(textTriggerClass, classes.textTrigger)} />\n                <Plx\n                    parallaxData={textParallaxData}\n                    className={clsx(classes.textPlx, reverse ? classes.reverseTextPlx : null)}>\n                    <h2>{title}</h2>\n                    <h3 className={classes.subtitle}>{subtitle}</h3>\n                    <div className={classes.description}>{description}</div>\n                    <ProjectLink url={link} className={classes.link} />\n                </Plx>\n            </div>\n            <div className={clsx(classes.imageBlockRoot, reverse ? classes.imageBlockReverse : null)}>\n                <div className={clsx(imageTriggerClass, classes.imageTrigger)} />\n                <Plx parallaxData={imageParallaxData} className={classes.imagePlx}>\n                    <img src={`/images/${image}`} alt={image} className={classes.img} />\n                </Plx>\n                <div className={classes.scrollY} />\n            </div>\n        </div>\n    );\n};\nexport default PlxLayout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AA3DA;AAAA;AACA;AAqEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAJA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AALA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AALA;AAcA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAVA;AAkBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AALA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AALA;AAcsourceRoot":""}