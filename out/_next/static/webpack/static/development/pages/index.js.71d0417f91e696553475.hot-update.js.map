{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.71d0417f91e696553475.hot-update.js","sources":["webpack:///./components/home/Competences.tsx","webpack:///./components/home/Skills.tsx","webpack:///./components/home/about/About.tsx","webpack:///./components/home/about/DownloadButton.tsx","webpack:///./components/home/projects/DesktopProjects.tsx","webpack:///./components/home/projects/MobileProjects.tsx","webpack:///./components/home/projects/PlxLayout.tsx","webpack:///./components/home/projects/Projects.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { useSelector } from 'react-redux';\n\nimport BlockTitle from '../Common/BlockTitle';\nimport { animate, itemVariants } from '../../animations/cards';\nimport { media, lgScreenWidth } from '../../utils/constants';\nimport { screenState } from '../../reducers/appReducer';\n\nconst data = [\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n    {\n        title: 'Performance',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n    },\n];\nconst useStyles = createUseStyles((theme: any) => ({\n    fullColumn: {\n        composes: 'flexColumn stretchSelf',\n    },\n    root: {\n        composes: '$fullColumn alignCenter',\n        paddingBottom: theme.spacing(30),\n        [media.mdDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            paddingBottom: theme.spacing(0),\n        },\n    },\n    content: {\n        composes: '$fullColumn center',\n    },\n    center: {\n        composes: 'flexRow justifyCenter',\n        [media.lgUp]: {\n            width: lgScreenWidth,\n            marginTop: theme.spacing(4),\n            paddingLeft: theme.spacing(8),\n            paddingRight: theme.spacing(8),\n        },\n        [media.smLg]: {\n            width: '60%',\n            backgroundColor: 'red',\n        },\n    },\n    items: {\n        composes: 'flexRow stretchSelf',\n        [media.lgUp]: {\n            marginTop: theme.spacing(12),\n        },\n    },\n    item: {\n        color: '#fff',\n        marginBottom: theme.spacing(8),\n        [media.lgUp]: {\n            width: 300,\n            margin: theme.spacing(4),\n        },\n        [media.mdDown]: {\n            marginBottom: theme.spacing(5),\n        },\n    },\n    title: {\n        composes: 'flexRow center',\n        fontFamily: 'Tungsten-Medium',\n        color: '#52575f',\n        fontSize: 22,\n        textTransform: 'uppercase',\n        marginBottom: theme.spacing(3),\n        '& span': {\n            marginLeft: -15,\n        },\n    },\n    description: {\n        fontFamily: 'Montserrat-Regular',\n        fontSize: 18,\n        lineHeight: 1.6,\n        letterSpacing: '0.68px',\n        color: '#fff',\n        [media.smDown]: {\n            fontSize: 16,\n        },\n    },\n}));\n\nconst Competences: FC = () => {\n    const classes = useStyles();\n    const isMobile = useSelector(screenState);\n\n    const [ref, inView] = useInView({\n        threshold: 0.3,\n        triggerOnce: false,\n    });\n    /** Components */\n    const Div = isMobile ? 'div' : motion.div;\n\n    /** Animation */\n    const itemsAnimation = (inView) => (isMobile ? {} : animate(inView));\n    const itemAnimation = isMobile ? {} : itemVariants;\n\n    return (\n        <div className={classes.root} id=\"competences\">\n            <BlockTitle title=\"Compétences clées\" subtitle=\"Ce que je maîtrise\" />\n            <div className={classes.content} ref={ref}>\n                <div className={classes.center}>\n                    <Div className={classes.items} {...itemsAnimation(inView)}>\n                        {data.map((item, index) => (\n                            <Div className={classes.item} key={index} {...itemAnimation}>\n                                <h6 className={classes.title}>\n                                    <img src=\"/images/icons/left-circle-active.svg\" alt=\"circle\" />\n                                    <span>{item.title}</span>\n                                </h6>\n                                <span className={classes.description}>{item.description}</span>\n                            </Div>\n                        ))}\n                    </Div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Competences;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { useSelector } from 'react-redux';\n\nimport BlockTitle from '../Common/BlockTitle';\nimport { animate, itemVariants } from '../../animations/cards';\nimport { media, lgScreenWidth } from '../../utils/constants';\nimport { screenState } from '../../reducers/appReducer';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    fullColumn: {\n        composes: 'flexColumn stretchSelf',\n    },\n    root: {\n        composes: '$fullColumn justifyCenter',\n        paddingBottom: theme.spacing(30),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            marginTop: theme.spacing(8),\n            paddingBottom: theme.spacing(0),\n        },\n    },\n    content: {\n        composes: '$fullColumn center',\n        [media.lgUp]: {\n            marginTop: theme.spacing(6),\n        },\n    },\n    center: {\n        composes: 'flexRow justifyCenter',\n        [media.lgUp]: {\n            width: lgScreenWidth - 300,\n            marginTop: theme.spacing(4),\n        },\n    },\n    type: {\n        composes: '$fullColumn flex1',\n        [media.mdDown]: {\n            marginBottom: theme.spacing(4),\n        },\n    },\n    title: {\n        composes: 'flexRow center stretchSelf',\n        fontFamily: 'Tungsten-Medium',\n        color: '#52575f',\n        fontSize: 24,\n        textTransform: 'uppercase',\n        marginBottom: theme.spacing(3),\n        '& span': {\n            marginLeft: 10,\n        },\n        [media.mdDown]: {\n            marginBottom: theme.spacing(1.3),\n        },\n    },\n    items: {\n        composes: 'flexColumn flexStart',\n        '& span': {\n            marginLeft: 10,\n        },\n        [media.mdUp]: {\n            marginBottom: theme.spacing(8),\n        },\n    },\n    item: {\n        composes: 'flexRow center',\n        marginBottom: theme.spacing(2),\n        [media.smDown]: {\n            marginBottom: 3,\n        },\n        width: 300,\n        '& h6': {\n            marginLeft: 10,\n            fontFamily: 'Montserrat-Regular',\n            fontSize: 18,\n            lineHeight: 1.6,\n            letterSpacing: '0.85px',\n            color: '#fff',\n            [media.smDown]: {\n                fontSize: 16,\n            },\n        },\n    },\n}));\n\nconst items = [\n    {\n        type: 'Language de Programmation',\n        icon: 'programing-language',\n        experiences: [\n            {\n                name: 'Javascript',\n                level: 'expert',\n            },\n            {\n                name: 'TypeScript',\n                level: 'expert',\n            },\n            {\n                name: 'PHP',\n                level: 'expert',\n            },\n            {\n                name: 'Python',\n                level: 'medium',\n            },\n            {\n                name: 'Ruby',\n                level: 'beginner',\n            },\n        ],\n    },\n    {\n        type: 'Backend',\n        icon: 'backend',\n        experiences: [\n            {\n                name: 'NodeJs',\n                level: 'expert',\n            },\n            {\n                name: 'Symfony',\n                level: 'expert',\n            },\n            {\n                name: 'Flask',\n                level: 'expert',\n            },\n            {\n                name: 'Ruby on Rails',\n                level: 'beginner',\n            },\n        ],\n    },\n    {\n        type: 'Frontend',\n        icon: 'frontend',\n        experiences: [\n            {\n                name: 'ReactJs',\n                level: 'expert',\n            },\n            {\n                name: 'HTML',\n                level: 'expert',\n            },\n            {\n                name: 'CSS',\n                level: 'expert',\n            },\n            {\n                name: 'JQuery',\n                level: 'expert',\n            },\n            {\n                name: 'Angular',\n                level: 'medium',\n            },\n        ],\n    },\n    {\n        type: 'Base de données',\n        icon: 'database',\n        experiences: [\n            {\n                name: 'MongoDB',\n                level: 'expert',\n            },\n            {\n                name: 'MySQL',\n                level: 'expert',\n            },\n            {\n                name: 'PostgreSQL',\n                level: 'expert',\n            },\n            {\n                name: 'Elastic Search',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Versioning',\n        icon: 'versioning',\n        experiences: [\n            {\n                name: 'GitHub',\n                level: 'expert',\n            },\n            {\n                name: 'GitLab',\n                level: 'expert',\n            },\n            {\n                name: 'BitBucket',\n                level: 'expert',\n            },\n        ],\n    },\n\n    {\n        type: 'Webservice',\n        icon: 'frontend',\n        experiences: [\n            {\n                name: 'REST API',\n                level: 'expert',\n            },\n            {\n                name: 'GraphQL',\n                level: 'expert',\n            },\n            {\n                name: 'Parse Server',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Design',\n        icon: 'Design',\n        experiences: [\n            {\n                name: 'Adobe Photoshop',\n                level: 'expert',\n            },\n            {\n                name: 'Adobe Illustrator',\n                level: 'expert',\n            },\n            {\n                name: 'InVision',\n                level: 'expert',\n            },\n            {\n                name: 'Zepplin',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Gestion Projet',\n        icon: 'project-gestion',\n        experiences: [\n            {\n                name: 'Jira',\n                level: 'expert',\n            },\n            {\n                name: 'Trello',\n                level: 'expert',\n            },\n            {\n                name: 'Asana',\n                level: 'expert',\n            },\n        ],\n    },\n    {\n        type: 'Outils communication',\n        icon: 'communication',\n        experiences: [\n            {\n                name: 'Skype',\n                level: 'expert',\n            },\n            {\n                name: 'Microsoft Teams',\n                level: 'expert',\n            },\n            {\n                name: 'Slack',\n                level: 'expert',\n            },\n            {\n                name: 'Google Sheet',\n                level: 'expert',\n            },\n        ],\n    },\n];\n\nconst Skills: FC = () => {\n    const classes = useStyles();\n    const isMobile = useSelector(screenState);\n\n    const [ref, inView] = useInView({\n        threshold: 0.1,\n        triggerOnce: false,\n    });\n    /** Components */\n    const Div = isMobile ? 'div' : motion.div;\n\n    /** Animation */\n    const itemsAnimation = (inView) => (isMobile ? {} : animate(inView));\n    const itemAnimation = isMobile ? {} : itemVariants;\n\n    return (\n        <div className={classes.root} id=\"skills\">\n            <BlockTitle title=\"Connaissance\" subtitle=\"Ce que je maîtrise\" right icon=\"skills\" />\n            <div className={classes.content} ref={ref}>\n                <Div className={classes.center} {...itemsAnimation(inView)}>\n                    {items.map((item, index) => (\n                        <Div className={classes.type} key={index} {...itemAnimation}>\n                            <h6 className={classes.title}>\n                                <img src={`/images/icons/${item.icon}.svg`} alt=\"\" />\n                                <span>{item.type}</span>\n                            </h6>\n                            <Div className={classes.items} {...itemsAnimation(inView)}>\n                                {item.experiences.map((experience, index) => (\n                                    <Div className={classes.item} key={index} {...itemAnimation}>\n                                        <img src={`/images/icons/${experience.level}.svg`} alt=\"\" />\n                                        <h6>{experience.name}</h6>\n                                    </Div>\n                                ))}\n                            </Div>\n                        </Div>\n                    ))}\n                </Div>\n            </div>\n        </div>\n    );\n};\n\nexport default Skills;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\n\nimport BlockTitle from '../../Common/BlockTitle';\nimport { media, lgScreenWidth } from '../../../utils/constants';\nimport PlxComponent from '../../Common/PlxComponent';\nimport DownloadButton from './DownloadButton';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    rowStretch: {\n        composes: 'flexRow justifyCenter stretchSelf',\n    },\n    root: {\n        composes: 'flexRow flex1 justifyCenter',\n        fontFamily: 'Prequelrough, sans-serif',\n        paddingBottom: theme.spacing(15),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            marginTop: theme.spacing(8),\n            paddingBottom: theme.spacing(10),\n        },\n    },\n    content: {\n        composes: '$rowStretch',\n        [media.lgDown]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: theme.spacing(5),\n        },\n        [media.lgUp]: {\n            width: lgScreenWidth - 400,\n            marginTop: theme.spacing(20),\n        },\n    },\n    center: {\n        composes: '$rowStretch',\n        [media.smLg]: {\n            width: '60%',\n        },\n    },\n    left: {\n        composes: 'flexColumn center flex1',\n        [media.smUp]: {\n            '& > img': {\n                width: 300,\n            },\n            flex: 1,\n        },\n        [media.xsSm]: {\n            '& > img': {\n                width: '60%',\n            },\n        },\n        [media.xsDown]: {\n            '& > img': {\n                width: '100%',\n            },\n        },\n        [media.lgUp]: {\n            width: 350,\n            opacity: 0,\n        },\n    },\n    right: {\n        [media.lgUp]: {\n            width: 500,\n            opacity: 0,\n        },\n        [media.lgDown]: {\n            marginTop: theme.spacing(8),\n        },\n    },\n    name: {\n        color: theme.color.grey,\n        fontWeight: '400',\n        lineHeight: 1.4,\n        textTransform: 'uppercase',\n        letterSpacing: 3.5,\n    },\n    post: {\n        color: '#fff',\n        fontWeight: '400',\n        lineHeight: 1.4,\n        textTransform: 'uppercase',\n        letterSpacing: 3.5,\n        marginTop: 10,\n        [media.lgUp]: {\n            width: 650,\n        },\n    },\n    descriptionText: {\n        lineHeight: 1.8,\n        marginTop: theme.spacing(3),\n        fontSize: 20,\n        [media.mdDown]: {\n            fontSize: 16,\n        },\n    },\n    shortDescription: {\n        color: theme.color.subtitle,\n        fontFamily: 'Montserrat, sans-serif',\n    },\n    description: {\n        fontFamily: 'Montserrat-Regular, sans-serif',\n        color: '#fff',\n    },\n    buttonContainer: {\n        composes: 'flexRow justifyCenter stretchSelf',\n        marginTop: theme.spacing(20),\n        [media.mdDown]: {\n            marginTop: theme.spacing(1.2),\n        },\n    },\n    button: {\n        flex: 1,\n    },\n}));\n\nconst textTriggerClass = 'about-text-trigger';\n\nconst About: FC = () => {\n    const classes = useStyles();\n\n    const textParallaxData = [\n        {\n            start: `.${textTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 10,\n                    endValue: 0,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    const imageParallaxData = [\n        {\n            start: `.${textTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: -22,\n                    endValue: -5,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    return (\n        <div className={classes.root} id=\"about\">\n            <BlockTitle title=\"A propos de moi\" subtitle=\"Qui suis-je\" right icon=\"setting\" />\n            <div className={classes.content}>\n                <div className={classes.center}>\n                    <PlxComponent className={classes.left} parallaxData={imageParallaxData}>\n                        <img alt=\"\" src=\"/images/profile2.jpg\" />\n                        <div className={classes.buttonContainer}>\n                            <DownloadButton text=\"Télécharger mon CV\" icon=\"download\" className={classes.button} />\n                        </div>\n                    </PlxComponent>\n                    <PlxComponent\n                        className={classes.right}\n                        parallaxData={textParallaxData}\n                        triggerClass={textTriggerClass}>\n                        <h2 className={classes.name}>Tiavina Michael Ralainirina</h2>\n                        <h3 className={classes.post}>Développeur FullStack / Web Designer / Lead Developpeur</h3>\n                        <div className={clsx(classes.shortDescription, classes.descriptionText)}>\n                            <span>\n                                Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\n                                laudantium, totam rem aperiam\n                            </span>\n                        </div>\n                        <div className={clsx(classes.description, classes.descriptionText)}>\n                            <span>\n                                Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\n                                laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                                architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas\n                                sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                                voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit\n                                amet, consectetur, adipisci velit, sed quia\n                            </span>\n                        </div>\n                    </PlxComponent>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport Plx from 'react-plx';\nimport { useSelector } from 'react-redux';\nimport { screenState } from '../../../reducers/appReducer';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    link: {\n        composes: 'flexRow spaceBetween flex1',\n        backgroundColor: theme.color.primary,\n        color: '#fff',\n        textDecoration: 'none',\n        padding: [20, 30],\n        letterSpacing: 1,\n        '& img': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n}));\n\ntype Props = {\n    text: string;\n    icon?: string;\n    url?: string;\n    className?: string;\n};\nconst DownloadButton: FC<Props> = ({ text, icon, url, className }) => {\n    const classes = useStyles();\n    const isMobile = useSelector(screenState);\n\n    const parallaxData = [\n        {\n            start: `self`,\n            duration: '40vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: -10,\n                    unit: 'vh',\n                    property: 'translateY',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    const Component = isMobile ? 'a' : Plx;\n    const otherProps = isMobile ? {} : { parallaxData, tagName: 'a' };\n\n    return (\n        <Component {...otherProps} className={clsx(classes.link, className)} href={url}>\n            <span>{text}</span>\n            {icon && <img alt=\"\" src={`/images/icons/${icon}.svg`} />}\n        </Component>\n    );\n};\n\nexport default DownloadButton;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PlxLayout from './PlxLayout';\n\nimport BlockTitle from '../../Common/BlockTitle';\nimport { media } from '../../../utils/constants';\nimport { ProjectsProps, PageInfoProps } from './Projects';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    root: {\n        composes: 'flexRow stretchSelf justifyCenter',\n        fontFamily: 'Prequelrough, sans-serif',\n        paddingBottom: theme.spacing(30),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            paddingBottom: theme.spacing(0),\n        },\n    },\n}));\n\ntype Props = { data: ProjectsProps[]; pageInfo: PageInfoProps };\nconst DesktopProjects: FC<Props> = ({ data, pageInfo }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} id=\"projects\">\n            <BlockTitle {...pageInfo} />\n            {data.map(\n                (item: ProjectsProps, index: number): ReactNode => (\n                    <PlxLayout {...item} key={index} reverse={index % 2 !== 0} />\n                )\n            )}\n        </div>\n    );\n};\n\nexport default DesktopProjects;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport BlockTitle from '../../Common/BlockTitle';\nimport { media, lgScreenWidth } from '../../../utils/constants';\nimport { ProjectsProps, PageInfoProps } from './Projects';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    rowCenter: {\n        composes: 'flexRow stretchSelf center',\n        padding: [0, 10],\n    },\n    root: {\n        composes: 'flexRow flex1 justifyCenter',\n        fontFamily: 'Prequelrough, sans-serif',\n        paddingBottom: theme.spacing(30),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            paddingBottom: theme.spacing(0),\n        },\n    },\n    center: {\n        composes: 'flexRow justifyCenter',\n        [media.lgUp]: {\n            width: lgScreenWidth,\n            marginTop: theme.spacing(4),\n        },\n    },\n    items: {\n        composes: 'flexRow stretchSelf',\n        [media.lgUp]: {\n            marginTop: theme.spacing(12),\n        },\n    },\n    item: {\n        composes: 'flexColumn alignCenter',\n        marginBottom: theme.spacing(10),\n        [media.smUp]: {\n            margin: theme.spacing(2),\n        },\n    },\n    body: {\n        composes: 'flexColumn',\n    },\n    image: {\n        padding: 10,\n        '& > img': {\n            width: '100%',\n        },\n    },\n    title: {\n        composes: 'flexRow center spaceBetween stretchSelf',\n        marginBottom: 20,\n        '& span': {\n            color: '#fff',\n        },\n    },\n    action: {\n        composes: '$rowCenter flex1',\n        borderTop: `1px solid ${theme.color.subtitle}`,\n        '& a': {\n            '&:hover': {\n                color: theme.color.primary,\n            },\n        },\n    },\n    button: {\n        composes: 'flexRow stretchSelf',\n        marginTop: 5,\n        marginBottom: -5,\n        height: 8,\n        paddingLeft: 12,\n        '& div': {\n            height: 8,\n            width: 8,\n            borderRadius: '50%',\n            marginRight: 8,\n        },\n    },\n    linkContainer: {\n        composes: 'flexRow justifyCenter',\n    },\n    link: {\n        composes: 'flexRow alignCenter justifyCenter',\n        color: '#fff',\n        textDecoration: 'none',\n        width: 250,\n    },\n    rightArrowIcon: {\n        marginLeft: 10,\n    },\n}));\n\ntype Props = { data: ProjectsProps[]; pageInfo: PageInfoProps };\nconst MobileProjects: FC<Props> = ({ data, pageInfo }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root} id=\"projects\">\n            <BlockTitle {...pageInfo} />\n            <div className={classes.center}>\n                <div className={classes.items}>\n                    {data.map(\n                        (item: ProjectsProps, index: number): ReactNode => (\n                            <div className={classes.item} key={index}>\n                                <div className={classes.image}>\n                                    <div className={classes.title}>\n                                        <span>{item.title}</span>\n                                    </div>\n                                    <img src={`/images/${item.image}`} alt=\"\" />\n                                    <div className={classes.linkContainer}>\n                                        <a href=\"#\" className={classes.link}>\n                                            <span>Voir le projet</span>\n                                            <img\n                                                src=\"/images/icons/enter.svg\"\n                                                alt=\"\"\n                                                className={classes.rightArrowIcon}\n                                            />\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MobileProjects;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Plx from 'react-plx';\nimport clsx from 'clsx';\n\nimport { ProjectsProps } from './Projects';\n\nconst SYSTEM_CONTENT_BLOCK_WIDTH = 380;\n\nconst useStyles = createUseStyles({\n    root: {\n        composes: 'flexRow justifyCenter',\n        height: '280vh',\n        width: '100%',\n    },\n    textBlockRoot: {\n        composes: 'textBlock',\n        maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n    },\n    textPlx: {\n        maxWidth: SYSTEM_CONTENT_BLOCK_WIDTH,\n        top: '20%',\n        opacity: 0,\n        position: 'fixed',\n        transform: 'translateX(-20vw)',\n    },\n    reverseTextPlx: {\n        transform: 'translateX(0vw)',\n    },\n    imageBlockRoot: {\n        composes: 'flexColumn alignCenter justifyCenter',\n    },\n    imageBlockReverse: {\n        order: -1,\n    },\n    img: {\n        width: '100%',\n        margin: 0,\n        transform: 'translateY(50%)',\n    },\n    imagePlx: {\n        pointerEvents: 'none',\n        bottom: 0,\n        opacity: 0,\n        position: 'fixed',\n        left: '13vw',\n    },\n    textTrigger: {\n        marginTop: '120vh',\n    },\n    imageTrigger: {\n        marginTop: '50vh',\n    },\n    scrollY: {\n        height: '200vh',\n    },\n});\n\ntype Props = {\n    reverse?: boolean;\n};\n\nconst PlxLayout: FC<Props & ProjectsProps> = ({ image, reverse, title, description }) => {\n    const classes = useStyles();\n    const triggerClass = title.split(' ').join('-') + '-trigger';\n    const textTriggerClass = 'text' + triggerClass;\n    const imageTriggerClass = 'image' + triggerClass;\n\n    const textParallaxData = [\n        {\n            start: `.${textTriggerClass}`,\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n        {\n            start: `.${textTriggerClass}`,\n            startOffset: '10vh',\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: reverse ? 0 : -20,\n                    endValue: reverse ? 16 : -38,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n            ],\n        },\n        {\n            start: `.${textTriggerClass}`,\n            startOffset: '90vh',\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 1,\n                    endValue: 0,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    const imageParallaxData = [\n        {\n            start: `.${imageTriggerClass}`,\n            duration: '50vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: -40,\n                    unit: 'vh',\n                    property: 'translateY',\n                },\n                {\n                    startValue: 0,\n                    endValue: 1,\n                    property: 'opacity',\n                },\n            ],\n        },\n        {\n            start: `.${imageTriggerClass}`,\n            startOffset: '60vh',\n            duration: '30vh',\n            properties: [\n                {\n                    startValue: 0,\n                    endValue: reverse ? -13 : 15,\n                    unit: 'vw',\n                    property: 'translateX',\n                },\n            ],\n        },\n        {\n            start: `.${imageTriggerClass}`,\n            startOffset: '190vh',\n            duration: '20vh',\n            properties: [\n                {\n                    startValue: 1,\n                    endValue: 0,\n                    property: 'opacity',\n                },\n            ],\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.textBlockRoot}>\n                <div className={clsx(textTriggerClass, classes.textTrigger)} />\n                <Plx\n                    parallaxData={textParallaxData}\n                    className={clsx(classes.textPlx, reverse ? classes.reverseTextPlx : null)}>\n                    <h1>{title}</h1>\n                    <div>{description}</div>\n                </Plx>\n            </div>\n            <div className={clsx(classes.imageBlockRoot, reverse ? classes.imageBlockReverse : null)}>\n                <div className={clsx(imageTriggerClass, classes.imageTrigger)} />\n                <Plx parallaxData={imageParallaxData} className={classes.imagePlx}>\n                    <img src={`/images/${image}`} alt={image} className={classes.img} />\n                </Plx>\n                <div className={classes.scrollY} />\n            </div>\n        </div>\n    );\n};\nexport default PlxLayout;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { screenState } from '../../../reducers/appReducer';\nimport MobileProjects from './MobileProjects';\nimport DesktopProjects from './DesktopProjects';\n\nconst pageInfo = {\n    title: 'Projets',\n    subtitle: \"Projets sur lesquels j'ai travaille\",\n    icon: 'projects',\n};\n\nconst data = [\n    {\n        image: 'mac.png',\n        title: 'Some Project Title here',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n        link: 'htttps://www.facebook.com',\n    },\n    {\n        image: 'mac.png',\n        title: 'Some Project Title here 2',\n        description:\n            'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n        link: 'htttps://www.facebook.com',\n    },\n];\nexport type ProjectsProps = { image: string; title: string; description?: string; link?: string };\nexport type PageInfoProps = { title: string; subtitle: string; icon: string };\nconst Projects: FC = () => {\n    const isMobile = useSelector(screenState);\n\n    return isMobile ? (\n        <MobileProjects data={data} pageInfo={pageInfo} />\n    ) : (\n        <DesktopProjects data={data} pageInfo={pageInfo} />\n    );\n};\n\nexport default Projects;\n","import React, { useEffect } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useDispatch } from 'react-redux';\n\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { getScreen } from '../reducers/appReducer';\nimport { media } from '../utils/constants';\nimport Competences from '../components/home/Competences';\nimport About from '../components/home/about/About';\nimport Presentation from '../components/home/presentation/Presentation';\nimport Projects from '../components/home/projects/Projects';\nimport Skills from '../components/home/Skills';\nimport Interests from '../components/home/Interests';\nimport Contact from '../components/home/Contact';\nimport Menu from '../components/menu/Menu';\n\nconst useStyles = createUseStyles({\n    window: {\n        [media.mdDown]: {\n            paddingLeft: 15,\n            paddingRight: 15,\n        },\n    },\n    root: {\n        composes: 'flexColumn flexCenter alignCenter stretchSelf flex1',\n    },\n    main: {\n        composes: 'flexColumn stretchSelf flex1',\n        backgroundColor: '#000',\n        color: '#fff',\n        [media.lgDown]: {\n            flexDirection: 'column',\n        },\n    },\n    left: {\n        composes: 'flexColumn',\n        [media.lgUp]: {\n            width: '80%',\n        },\n    },\n    right: {\n        composes: 'flexColumn',\n        [media.lgUp]: {\n            width: '20%',\n        },\n        [media.lgDown]: {\n            order: -1,\n            alignSelf: 'stretch',\n        },\n    },\n});\n\nconst Home = () => {\n    const size = useWindowSize();\n    const classes = useStyles({ size });\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getScreen(size.width));\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Menu />\n            <Presentation />\n            <div className={classes.main}>\n                {/* <div className={clsx(classes.left, classes.window)}> */}\n                <Competences />\n                <About />\n                <Projects />\n                <Skills />\n                <Interests />\n                <Contact />\n                {/* </div> */}\n                {/* <div className={clsx(classes.right, classes.window)}>\n                    <AboutSidebar />\n                </div> */}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AADA;AA/DA;AAAA;AACA;AAocA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAWA;AADA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AADA;AAtEA;AAAA;AA6EA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AApBA;AA2BA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AApBA;AA2BA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAoBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAmBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAmBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AACA;AAuoBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AADA;AADA;AAMA;AACA;AADA;AADA;AAMA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AADA;AA1GA;AAAA;AA+GA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAVA;AAmBA;AAEA;AACA;AACA;AAEA;AACA;AAC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","sourceRoot":""}