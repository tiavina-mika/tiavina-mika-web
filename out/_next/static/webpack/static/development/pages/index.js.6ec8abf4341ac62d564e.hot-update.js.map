{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6ec8abf4341ac62d564e.hot-update.js","sources":["webpack:///./components/home/knowledges/ItemsChart.tsx","webpack:///./components/home/knowledges/Knowledges.tsx","webpack:///./components/home/knowledges/OveralCard.tsx","webpack:///./components/home/knowledges/PieChartSvg.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { KnowledgesMainChart } from './OveralCard';\n\nimport ProgressiveBar from './ProgressiveBar';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    items: {\n        composes: 'flexColumn stretchSelf center font-ProximaNova-bold',\n        paddingLeft: theme.spacing(6),\n        paddingRight: theme.spacing(6),\n        fontSize: 14,\n    },\n    item: {\n        composes: 'flexRow center stretchSelf',\n        marginBottom: theme.spacing(2),\n    },\n    texts: {\n        composes: 'flexColumn stretchSelf justifyCenter',\n        flex: 1,\n    },\n    label: {},\n    value: {\n        color: '#8693B5',\n        marginTop: theme.spacing(0.7),\n    },\n    progressiveBar: {\n        flex: 2,\n    },\n}));\n\ntype Props = { items: KnowledgesMainChart[]; itemClassName?: string; className?: string };\nconst ItemsChart: FC<Props> = ({ items, itemClassName, className }) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.items, className)}>\n            {items.map(\n                (item: KnowledgesMainChart, index: number): ReactNode => (\n                    <div className={clsx(classes.item, itemClassName)} key={item.label + '-' + index}>\n                        <div className={classes.texts}>\n                            <div className={classes.label}>{item.label}</div>\n                            <div className={classes.value}>{item.value}%</div>\n                        </div>\n                        <ProgressiveBar color={item.color} percent={item.value} className={classes.progressiveBar} />\n                        {/* <ProgressiveBar color=\"#FD7A8C\" percent={10} width={167} /> */}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nexport default ItemsChart;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport { horizontalPaddingMobile, media } from '../../../utils/constants';\nimport { isReverse } from '../../../utils/utils';\n\nimport Knowledge from './KnowledgeDescription';\nimport KnowledgeProgressBar from './KnowledgeProgressBar';\nimport OveralCard, { KnowledgesMainChart } from './OveralCard';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgesRoot: {\n        composes: 'flexColumn alignCenter justifyCenter flex1',\n        fontFamily: 'font-ProximaNova-regular',\n        paddingBottom: theme.spacing(15),\n        [media.lgDown]: {\n            paddingLeft: theme.spacing(horizontalPaddingMobile),\n            paddingRight: theme.spacing(horizontalPaddingMobile),\n        },\n    },\n    overall: {\n        composes: 'flexColumn center stretchSelf red',\n        [media.lgDown]: {\n            marginBottom: theme.spacing(4),\n        },\n    },\n    progressiveContainer: {\n        composes: 'flexColumn stretchSelf center',\n        width: '100%',\n        height: 200,\n    },\n    knowledgesProgressBar: {\n        marginBottom: theme.spacing(16),\n        composes: 'flexRow stretchSelf flex1',\n        [media.mdDown]: {\n            flexDirection: 'column',\n        },\n    },\n    knowledgesProgressBarContent: {\n        composes: 'flexRow stretchSelf flex1',\n        [media.lgUp]: {\n            width: 1300,\n        },\n        [media.mdLg]: {\n            width: 1000,\n        },\n    },\n}));\n\nexport interface TechnoI {\n    name: string;\n    image: string;\n    value: number;\n}\nexport interface KnowledgeI {\n    title: string;\n    description: string;\n    cardPositions?: number[][];\n    technos: TechnoI[];\n}\nconst dataDescription: KnowledgeI[] = [\n    {\n        title: 'Frontend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries, \n        but also the leap into electronic typesetting, remaining \n        essentially unchanged.`,\n        technos: [\n            {\n                name: 'React',\n                image: 'react',\n                value: 98,\n            },\n            {\n                name: 'HTML',\n                image: 'html',\n                value: 100,\n            },\n            {\n                name: 'CSS',\n                image: 'css',\n                value: 100,\n            },\n            {\n                name: 'JQuery',\n                image: 'jquery',\n                value: 98,\n            },\n            {\n                name: 'Angular',\n                image: 'angular',\n                value: 50,\n            },\n        ],\n    },\n    {\n        title: 'Backend',\n        description: `Lorem Ipsum is simply dummy text of the printing and \n        typesetting industry. Lorem Ipsum has been the industry's \n        standard dummy text ever since the 1500s, when an unknown \n        printer took a galley of type and scrambled it to make a \n        type specimen book. It has survived not only five centuries.`,\n        cardPositions: [\n            [0, 100, 0],\n            [1, 0, 95],\n            [2, 150, 230],\n            [3, 100, 180],\n            [4, 210, 120],\n        ],\n        technos: [\n            {\n                name: 'Node',\n                image: 'node',\n                value: 95,\n            },\n            {\n                name: 'Symfony',\n                image: 'symfony',\n                value: 95,\n            },\n            {\n                name: 'Flask',\n                image: 'flask',\n                value: 80,\n            },\n            {\n                name: 'Rails',\n                image: 'rails',\n                value: 45,\n            },\n        ],\n    },\n];\n\ninterface KnowledgesProgressiveChartI {\n    title: string;\n    items: KnowledgesMainChart[];\n}\nconst dataProgressBar: KnowledgesProgressiveChartI[] = [\n    {\n        title: 'Language de programmation',\n        items: [\n            {\n                label: 'Javascript',\n                value: 95,\n                color: '#956FFF',\n            },\n            {\n                label: 'TypeScript',\n                value: 95,\n                color: '#FEE895',\n            },\n            {\n                label: 'Python',\n                value: 80,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'PHP',\n                value: 95,\n                color: '#95BF46',\n            },\n            {\n                label: 'Ruby',\n                value: 40,\n                color: '#00D8FF',\n            },\n        ],\n    },\n    {\n        title: 'Base de donn√©es',\n        items: [\n            {\n                label: 'MySQL',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'MongoDB',\n                value: 98,\n                color: '#FEE895',\n            },\n            {\n                label: 'ElasticSearch',\n                value: 75,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'PostgreSQL',\n                value: 88,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Design',\n        items: [\n            {\n                label: 'Photoshop',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'Illustrator',\n                value: 96,\n                color: '#FEE895',\n            },\n            {\n                label: 'InVision',\n                value: 80,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'Zepplin',\n                value: 55,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Webservice',\n        items: [\n            {\n                label: 'REST',\n                value: 96,\n                color: '#956FFF',\n            },\n            {\n                label: 'GraphQL',\n                value: 96,\n                color: '#FEE895',\n            },\n            {\n                label: 'Parse Server',\n                value: 92,\n                color: '#FD7A8C',\n            },\n            {\n                label: 'Firebase',\n                value: 55,\n                color: '#95BF46',\n            },\n        ],\n    },\n    {\n        title: 'Gestion de code source',\n        items: [\n            {\n                label: 'GitHub',\n                value: 99,\n                color: '#956FFF',\n            },\n            {\n                label: 'GitLab',\n                value: 90,\n                color: '#FEE895',\n            },\n            {\n                label: 'BitBucket',\n                value: 95,\n                color: '#FD7A8C',\n            },\n        ],\n    },\n    {\n        title: 'Gestion de projet',\n        items: [\n            {\n                label: 'Trello',\n                value: 95,\n                color: '#956FFF',\n            },\n            {\n                label: 'Asana',\n                value: 80,\n                color: '#FEE895',\n            },\n            {\n                label: 'Jira',\n                value: 90,\n                color: '#FD7A8C',\n            },\n        ],\n    },\n];\n\nconst Knowledges: FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgesRoot} id=\"knowledges\">\n            <div className={classes.overall}>\n                <OveralCard />\n            </div>\n            {dataDescription.map(\n                (d: KnowledgeI, i: number): ReactNode => (\n                    <Knowledge data={d} key={i} reverse={isReverse(i)} />\n                )\n            )}\n            {/* <div className={classes.knowledgesProgressBar}>\n                <div className={classes.knowledgesProgressBarContent}>\n                    {dataProgressBar.map((d, i) => (\n                        <KnowledgeProgressBar data={d} key={i} />\n                    ))}\n                </div>\n            </div> */}\n        </div>\n    );\n};\n\nexport default Knowledges;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport ItemsChart from './ItemsChart';\nimport PieChartSvg from './PieChartSvg';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    overallCard: {\n        composes: 'flexColumn justifyCenter center font-ProximaNova-bold',\n        // height: 370,\n        paddingBottom: theme.spacing(4),\n        width: 420,\n        boxShadow: '1px 15px 10px 0 #C9D3DD',\n        borderRadius: 20,\n    },\n    header: {\n        composes: 'flexColumn justifyCenter stretchSelf',\n        backgroundColor: '#F1FDFF',\n        padding: [theme.spacing(4), theme.spacing(4)],\n    },\n    pieChart: {\n        marginBottom: theme.spacing(5),\n        marginTop: theme.spacing(5),\n    },\n}));\n\nexport interface KnowledgesMainChart {\n    label: string;\n    value: number;\n    color: string;\n}\nconst itemsChart: KnowledgesMainChart[] = [\n    {\n        label: 'Frontend',\n        value: 95,\n        color: '#956FFF',\n    },\n    {\n        label: 'Backend',\n        value: 90,\n        color: '#FEE895',\n    },\n    {\n        label: 'Database',\n        value: 90,\n        color: '#FD7A8C',\n    },\n    {\n        label: 'Design',\n        value: 75,\n        color: '#95BF46',\n    },\n    {\n        label: 'Ops',\n        value: 50,\n        color: '#00D8FF',\n    },\n];\n\nconst OveralCard: FC = () => {\n    const classes = useStyles();\n    const total = itemsChart.reduce((acc, curr) => {\n        return acc + curr.value;\n    }, 0);\n\n    return (\n        <div className={classes.overallCard}>\n            <div className={classes.header}>Note G√©n√©rale</div>\n            <div className={classes.pieChart}>\n                <PieChartSvg total={total / itemsChart.length} />\n            </div>\n            <ItemsChart items={itemsChart} />\n        </div>\n    );\n};\n\nexport default OveralCard;\n","import React, { FC } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n    cls1: {\n        fill: '#fff',\n        stroke: '#eff4f9',\n        strokeWidth: 20,\n    },\n    cls2: {\n        strokeWidth: 20,\n        fill: 'none',\n        stroke: '#80ebff',\n        strokeLinecap: 'round',\n    },\n    cls3: {\n        fill: 'none',\n        stroke: '#e7edf1',\n        strokeWidth: 2,\n    },\n    text: {\n        fontSize: 30,\n        composes: 'font-ProximaNova-bold',\n    },\n});\n\ntype Props = { total: number };\nconst PieChartSvg: FC<Props> = ({ total }) => {\n    const classes = useStyles();\n    return (\n        <svg\n            id=\"Layer_1\"\n            data-name=\"Layer 1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"193\"\n            height=\"196.02\"\n            viewBox=\"0 0 193 196.02\">\n            <path\n                id=\"inactive-bar\"\n                className={classes.cls1}\n                d=\"M183,98c0,48.75-38.87,88-86.5,88S10,146.76,10,98,48.87,10,96.5,10,183,49.25,183,98Z\"\n            />\n            <path\n                id=\"active-bar\"\n                className={classes.cls2}\n                d=\"M96,12c46.39,0,84,38.28,84,85.5S142.39,183,96,183,12,144.72,12,97.5A86.41,86.41,0,0,1,22.33,56.38\"\n            />\n            <path id=\"divider\" className={classes.cls3} d=\"M61,100h69\" />\n            <text id=\"value\" className={classes.text} transform=\"translate(82.79 85.21)\">\n                {total}\n            </text>\n            <text id=\"unit\" className={classes.text} transform=\"translate(68.49 136)\">\n                100\n            </text>\n        </svg>\n    );\n};\n\nexport default PieChartSvg;\n"],"mappings":"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","sourceRoot":""}