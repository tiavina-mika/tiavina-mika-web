{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6012e7e8cf9696fef435.hot-update.js","sources":["webpack:///./components/home/knowledges/KnowledgeDescription.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { media } from '../../../utils/constants';\n\nimport Text from '../../shared/Text';\nimport BlockTitle from './BlockTitle';\nimport { KnowledgeI, TechnoI } from './Knowledges';\nimport ProgressiveBar from './ProgressiveBar';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    knowledgeRoot: {\n        composes: 'flexColumn center stretchSelf',\n        fontFamily: 'font-ProximaNova-regular',\n        marginTop: theme.spacing(25),\n        marginBottom: theme.spacing(15),\n        [media.lgDown]: {\n            marginTop: theme.spacing(5),\n            marginBottom: theme.spacing(5),\n        },\n    },\n    knowledgeContent: {\n        composes: 'flexRow justifyCenter alignCenter',\n        alignSelf: 'center',\n        [media.lgUp]: {\n            width: 1200,\n        },\n        [media.lgDown]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n    },\n    textContainer: {\n        composes: 'flexColumn',\n        flex: 1,\n        [media.lgUp]: {\n            marginTop: theme.spacing(12),\n        },\n    },\n    blockReverse: {\n        [media.lgUp]: {\n            marginLeft: theme.spacing(40),\n        },\n    },\n    cards: {\n        composes: 'flexRow',\n        [media.lgUp]: {\n            flex: 1.2,\n        },\n        [media.smLg]: {\n            marginTop: theme.spacing(6),\n        },\n        [media.smDown]: {\n            marginTop: theme.spacing(2),\n        },\n    },\n    card: {\n        composes: 'flexColumn spaceBetween center',\n        width: 98,\n        padding: theme.spacing(3),\n        marginRight: theme.spacing(1),\n        height: 93,\n        backgroundColor: '#fff',\n        boxShadow: '0 8px 10px 0 rgba(0,0,0,.08)',\n        borderRadius: 10,\n        [media.lgUp]: {\n            position: 'relative',\n        },\n        [media.lgDown]: {\n            margin: theme.spacing(2),\n        },\n    },\n    cardBody: {\n        composes: 'flexColumn spaceBetween stretchSelf center',\n    },\n    label: {\n        composes: 'font-ProximaNova-bold',\n        fontSize: 16,\n        marginBottom: theme.spacing(1),\n    },\n    descriptionContainer: {\n        marginTop: theme.spacing(2),\n        [media.lgUp]: {\n            width: 400,\n        },\n        [media.lgDown]: {\n            marginTop: theme.spacing(0),\n        },\n        [media.smLg]: {\n            width: 600,\n        },\n    },\n    description: {\n        fontWeight: 300,\n        lineHeight: '1.8em',\n        fontSize: 17,\n        [media.smDown]: {\n            fontSize: 16,\n        },\n    },\n    reverse: {\n        [media.lgUp]: {\n            order: 1,\n        },\n    },\n}));\n\nconst getColor = (percent: number): string => {\n    let color;\n    if (percent > 50) color = '#13BB70';\n    if (percent > 25 && percent <= 50) color = '#FEE895';\n    if (percent <= 25) color = '#F4B63E';\n    return color;\n};\n\ninterface CardPositionI {\n    top: number;\n    left: number;\n}\n\nconst getCardPosition = (index: number, cardPositions?: number[][]): CardPositionI => {\n    const positions: number[][] = cardPositions || [\n        [0, 100, 0],\n        [1, 0, 95],\n        [2, 100, 240],\n        [3, 250, -80],\n        [4, 210, 120],\n    ];\n    let top: number;\n    let left: number;\n    positions.map((item: number[]) => {\n        if (index !== item[0]) return false;\n        top = item[1];\n        left = item[2];\n    });\n    return { top, left };\n};\n\ntype Props = { data: KnowledgeI; reverse: boolean };\nconst Knowledge: FC<Props> = ({ data, reverse }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.knowledgeRoot}>\n            <div className={classes.knowledgeContent}>\n                <div\n                    className={clsx(\n                        classes.textContainer,\n                        reverse ? classes.reverse : null,\n                        reverse ? classes.blockReverse : null\n                    )}>\n                    <BlockTitle text={data.title} />\n                    <div className={classes.descriptionContainer}>\n                        <Text text={data.description} tagName=\"p\" className={classes.description} />\n                    </div>\n                </div>\n                <div className={classes.cards}>\n                    {data.technos.map(\n                        (d: TechnoI, index: number): ReactNode => (\n                            <div\n                                className={classes.card}\n                                key={d.name}\n                                style={{\n                                    top: getCardPosition(index, data.cardPositions).top,\n                                    left: getCardPosition(index, data.cardPositions).left,\n                                }}>\n                                <img alt=\"react\" src={`/images/technos/${d.image}.png`} />\n                                <div className={classes.cardBody}>\n                                    <Text text={d.name} className={classes.label} />\n                                    <ProgressiveBar color={getColor(d.value)} percent={d.value} height={8} />\n                                </div>\n                            </div>\n                        )\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Knowledge;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AAEA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AAEA;AADA;AA3FA;AAAA;AACA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAoBA;AACA;AACA;;;;A","sourceRoot":""}