{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b3335306f259c497591a.hot-update.js","sources":["webpack:///./components/home/projects-grid/ProjectsGrid.tsx"],"sourcesContent":["import React, { ElementType, Fragment, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useWindowSize } from 'react-use';\nimport Plx from 'react-plx';\n\nimport { md, media, projectCardWidth } from '../../../utils/constants';\nimport Layout from '../../shared/Layout';\nimport Text from '../../shared/Text';\nimport Title from '../../shared/Title';\nimport ProjectGrid, { RESPONSIVE_CARD_WIDTH } from './ProjectGrid';\n\nconst useStyles = createUseStyles((theme: any) => ({\n    projectsRoot: {\n        composes: 'flexRow',\n    },\n    projectsContent: {\n        composes: 'flexRow flex1',\n        [media.smDown]: {\n            flexDirection: 'column',\n        },\n    },\n    left: {\n        composes: 'flexColumn flex1 justifyCenter flexEnd',\n        [media.smMd]: {\n            marginRight: theme.spacing(1.5),\n        },\n        [media.mdUp]: {\n            marginRight: theme.spacing(3),\n        },\n        [media.smDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    right: {\n        composes: 'flexColumn flex1 justifyCenter flexStart',\n        [media.smMd]: {\n            marginLeft: theme.spacing(1.5),\n        },\n        [media.mdUp]: {\n            marginLeft: theme.spacing(3),\n        },\n        [media.smDown]: {\n            alignSelf: 'stretch',\n        },\n    },\n    blockTitle: {\n        position: 'relative',\n        composes: 'flexColumn',\n        paddingTop: theme.spacing(12),\n        paddingBottom: theme.spacing(16),\n        [media.lgXl]: {\n            width: RESPONSIVE_CARD_WIDTH.lgXl,\n        },\n        [media.mdLg]: {\n            width: RESPONSIVE_CARD_WIDTH.mdLg,\n        },\n        [media.xlUp]: {\n            width: projectCardWidth,\n        },\n        [media.smMd]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(9),\n        },\n        [media.smDown]: {\n            paddingTop: theme.spacing(3),\n            paddingBottom: theme.spacing(5),\n        },\n    },\n    blockTitleContent: {\n        [media.smMd]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            alignSelf: 'stretch',\n        },\n        [media.mdUp]: {\n            paddingLeft: theme.spacing(5),\n            paddingRight: theme.spacing(5),\n        },\n    },\n    blockDescription: {\n        marginTop: theme.spacing(2),\n        width: '80%',\n        [media.smMd]: {\n            width: '60%',\n            lineHeight: 1.4,\n            textAlign: 'center',\n            fontSize: 16,\n        },\n        [media.smDown]: {\n            fontSize: 14,\n            width: '100%',\n            lineHeight: 1.6,\n        },\n    },\n    block: {\n        borderRadius: 10,\n        transition: 'all .5s cubic-bezier(.19,1,.4,1)',\n        width: 580,\n        height: 590,\n        backgroundColor: '#d3b589',\n        marginBottom: theme.spacing(6),\n    },\n}));\n\ninterface ColorI {\n    color: string;\n    dark?: boolean;\n}\nexport interface ProjectI {\n    id: string;\n    subtitle: string;\n    title: string;\n    description: string;\n    url: string;\n    color: ColorI;\n}\nconst colors: ColorI[] = [\n    { color: 'd3b589' },\n    { color: '825c79' },\n    { color: 'eeedea', dark: true },\n    { color: 'b5d4cc' },\n    { color: '7ca5cf' },\n];\nconst projects: Omit<ProjectI, 'color'>[] = [\n    {\n        id: '1',\n        subtitle: 'Some card subtitle',\n        title: 'Some card title, two line card title',\n        description: 'Some long, very very long card description, and very very long card description',\n        url: '/',\n    },\n    {\n        id: '2',\n        subtitle: 'Some card subtitle 2',\n        title: 'Some card title 2',\n        description: 'Some long, very very long card description, and very very long card description 2',\n        url: '/',\n    },\n    {\n        id: '3',\n        subtitle: 'Some card subtitle 3',\n        title: 'Some card title, two line card title 3',\n        description: 'Some long, very very long card description, and very very long card description 3',\n        url: '/',\n    },\n    {\n        id: '4',\n        subtitle: 'Some card subtitle 4',\n        title: 'Some card title, two line card title 4',\n        description: 'Some long, very very long card description, and very very long card description 4',\n        url: '/',\n    },\n    {\n        id: '5',\n        subtitle: 'Some card subtitle 5',\n        title: 'Some card title, two line card title 5',\n        description: 'Some long, very very long card description, and very very long card description 5',\n        url: '/',\n    },\n];\n\nconst ProjectsGrid = () => {\n    const classes = useStyles();\n    const [leftCardsData, setLeftCardData] = useState<ProjectI[]>([]);\n    const [rightCardsData, setRightCardData] = useState<ProjectI[]>([]);\n    const { width } = useWindowSize();\n    const [isTablet, setIsTablet] = useState<boolean>(false);\n\n    useEffect(() => {\n        setIsTablet(width <= md)\n    }, [width])\n\n    const parallaxData = useMemo(() => {\n        return [\n            {\n                start: 'self',\n                duration: '160vh',\n                properties: [\n                    {\n                        startValue: 0,\n                        endValue: -240,\n                        unit: 'px',\n                        property: 'translateY',\n                    },\n                ],\n            },\n            {\n                start: 'self',\n                duration: '20vh',\n                properties: [\n                    {\n                        startValue: 0,\n                        endValue: 1,\n                        property: 'opacity',\n                    },\n                ],\n            },\n        ];\n    }, []);\n    useEffect(() => {\n        const split: number = projects.length <= 5 ? 2 : 3;\n        const newProjects = projects.map(\n            (project: Omit<ProjectI, 'color'>, index: number): ProjectI => ({\n                ...project,\n                color: colors[index],\n            })\n        );\n        const leftCards: ProjectI[] = [...newProjects].splice(0, split);\n        const rightCards: ProjectI[] = [...newProjects].splice(split, projects.length);\n        setLeftCardData([...leftCards]);\n        setRightCardData([...rightCards]);\n    }, []);\n\n    const splicedPorject = (project: ProjectI): ReactNode => <ProjectGrid key={project.id} {...project} />;\n\n    const blockTitle: ReactNode = (\n        <div className={classes.blockTitle}>\n            <div className={classes.blockTitleContent}>\n                <Title text=\"Some Title\" level={2} />\n                <Text\n                    className={classes.blockDescription}\n                    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi dapibus metus non nunc tempor, eu ultricies mi euismod.\"\n                    tagName=\"p\"\n                />\n            </div>\n        </div>\n    );\n    const Component: ElementType = isTablet ? Fragment : Plx;\n    const otherProps = isTablet ? {} : { parallaxData };\n    return (\n        <Layout className={classes.projectsRoot}>\n            {isTablet && blockTitle}\n            <div className={classes.projectsContent}>\n                <div className={classes.left}>\n                    {!isTablet && blockTitle}\n                    {leftCardsData.map(splicedPorject)}\n                </div>\n                <div className={classes.right}>\n                    <Component {...otherProps}>{rightCardsData.map(splicedPorject)}</Component>\n                </div>\n            </div>\n        </Layout>\n    );\n};\nexport default ProjectsGrid;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAIA;AADA;AAIA;AADA;AAIA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AApFA;AAAA;AA0GA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAJA;AAaA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAJA;AAYA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;;;;A","sourceRoot":""}